[
    {
        "name": "SYN Flood Attack",
        "description": "An overwhelming flood of TCP SYN packets targeting a single destination port, aiming to exhaust server resources by creating many half-open connections. This is a classic Denial-of-Service (DoS) attack.",
        "severity": "CRITICAL",
        "category": "Denial of Service",
        "protocol": "TCP",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "High rate of SYN packets from a single source IP to a single destination IP and port, with no corresponding SYN-ACK or RST packets from the destination.",
        "detection_criteria": {
            "packet_rate_per_sec": 1000,
            "syn_flag_only": true,
            "no_syn_ack_or_rst_response_ratio": 0.9,
            "time_window_seconds": 5
        },
        "false_positive_considerations": "Legitimate high-volume traffic during peak times, misconfigured clients, or network issues might cause spikes. Consider known trusted sources.",
        "recommended_action": "Block source IP, alert security team, investigate potential DDoS mitigation."
    },
    {
        "name": "UDP Flood Attack",
        "description": "A high volume of UDP packets directed at a specific target port or host. Unlike TCP, UDP is connectionless, making it easier to spoof source IPs and harder to trace. It aims to saturate network bandwidth or overwhelm target services.",
        "severity": "HIGH",
        "category": "Denial of Service",
        "protocol": "UDP",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Unusually high volume of UDP packets (>1000 pps) from a single or distributed set of sources to a single destination, especially on unusual ports.",
        "detection_criteria": {
            "packet_rate_per_sec": 1000,
            "time_window_seconds": 5,
            "suspicious_ports": [67, 68, 161, 162, 53, 123, 1900]
        },
        "false_positive_considerations": "Legitimate UDP-heavy applications (e.g., streaming, gaming, DNS traffic) could trigger this. Baseline normal UDP traffic is essential.",
        "recommended_action": "Throttle UDP traffic to target, block top source IPs, investigate traffic patterns."
    },
    {
        "name": "ICMP Flood Attack (Ping Flood)",
        "description": "An attack that overwhelms a target with ICMP Echo Request (ping) packets, consuming bandwidth and CPU resources, making the system unresponsive to legitimate traffic.",
        "severity": "HIGH",
        "category": "Denial of Service",
        "protocol": "ICMP",
        "port": "N/A",
        "direction": "INBOUND",
        "condition_summary": "Excessive ICMP Echo Request packets (Type 8, Code 0) from a source to a single destination within a short period.",
        "detection_criteria": {
            "packet_rate_per_sec": 500,
            "icmp_type": 8,
            "icmp_code": 0,
            "time_window_seconds": 5
        },
        "false_positive_considerations": "Network diagnostic tools or legitimate large-scale ping sweeps could trigger this. Consider known network monitoring tools.",
        "recommended_action": "Rate-limit ICMP traffic to target, block source IP if sustained."
    },
    {
        "name": "TCP Port Scan (Stealth/SYN Scan)",
        "description": "A reconnaissance technique where an attacker sends SYN packets to a range of ports on a target and analyzes SYN-ACK or RST responses to identify open ports without completing the TCP handshake.",
        "severity": "MEDIUM",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": "0-65535",
        "direction": "INBOUND",
        "condition_summary": "Multiple SYN packets to different ports on a single host from the same source IP, followed by RST or SYN-ACK responses without an ACK from the scanner.",
        "detection_criteria": {
            "unique_dest_ports_per_source": 20,
            "syn_flag_only": true,
            "time_window_seconds": 60,
            "no_ack_from_source_ratio": 0.8
        },
        "false_positive_considerations": "Legitimate port scanners used by IT staff for auditing. Ensure internal network scans are whitelisted.",
        "recommended_action": "Log and alert, block source IP if unauthorized, scan target for vulnerabilities."
    },
    {
        "name": "TCP Port Scan (Connect Scan)",
        "description": "A straightforward port scanning method where the attacker attempts to establish a full TCP connection (SYN, SYN-ACK, ACK) to a range of ports. This is noisy but effective for identifying open ports.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": "0-65535",
        "direction": "INBOUND",
        "condition_summary": "Multiple full TCP connection attempts to different ports on a single host from the same source IP, especially if many connections are immediately closed or reset.",
        "detection_criteria": {
            "unique_dest_ports_per_source": 10,
            "full_tcp_handshake_attempts": true,
            "time_window_seconds": 30
        },
        "false_positive_considerations": "Network diagnostic tools, or rapid client connections to various services. Baselines are important.",
        "recommended_action": "Log and alert, consider blocking if repeated and unauthorized."
    },
    {
        "name": "SQL Injection Attempt (Error-Based)",
        "description": "An attacker attempts to inject malicious SQL code that deliberately causes database errors, revealing information about the database structure or content within the error messages.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Presence of SQL error keywords (e.g., 'SQL syntax', 'ODBC error', 'MySQL', 'ORA-') in HTTP response bodies immediately following requests containing suspicious SQL injection patterns (e.g., single quotes, 'UNION', 'SELECT', 'CAST').",
        "detection_criteria": {
            "payload_regex": [
                "(OR|AND)\\s+[0-9]+=[0-9]+",
                "SELECT\\s+.*\\s+FROM",
                "UNION\\s+SELECT",
                "\\bCAST\\b",
                "\\bCONVERT\\b",
                "\\binformation_schema\\b",
                "(--|#|\\/\\*).*\\b"
            ],
            "response_keywords": ["syntax error", "ORA-", "SQLState", "ODBC", "mysql_fetch_array"],
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body", "cookie", "header"],
            "time_window_seconds": 5
        },
        "false_positive_considerations": "Legitimate application queries that coincidentally contain SQL keywords (rare, but possible with certain input schemas).",
        "recommended_action": "Block source IP, review application logs, patch vulnerable application, conduct penetration testing."
    },
    {
        "name": "Cross-Site Scripting (XSS) Attempt (Reflected)",
        "description": "An attacker injects malicious client-side script into a web application, which is then reflected back to the user and executed by their browser. This can lead to cookie theft, session hijacking, or defacement.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Detection of common XSS payload patterns (e.g., `<script>`, `onerror=`, `alert()`) in HTTP request parameters that are directly observed unencoded in the corresponding HTTP response body.",
        "detection_criteria": {
            "payload_regex": [
                "<script.*?>",
                "javascript:",
                "onload=",
                "onerror=",
                "eval\\(",
                "document\\.cookie",
                "<img>\\s+src=\"x\"\\s+onerror="
            ],
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body", "cookie", "header"],
            "response_reflection": true
        },
        "false_positive_considerations": "Applications that legitimately process user-supplied HTML content (e.g., forums, rich text editors) might trigger this. Requires context-aware parsing.",
        "recommended_action": "Block source IP, review application logs, sanitize input, implement Content Security Policy (CSP)."
    },
    {
        "name": "Brute-Force Login Attempt (SSH)",
        "description": "Repeated, unsuccessful login attempts against an SSH service from a single source, indicating an automated attempt to guess credentials.",
        "severity": "MEDIUM",
        "category": "Authentication",
        "protocol": "TCP",
        "port": "22",
        "direction": "INBOUND",
        "condition_summary": "Excessive failed SSH login attempts (e.g., 'Authentication failed for user X') from a single source IP address within a short time window.",
        "detection_criteria": {
            "failed_attempts": 10,
            "time_window_seconds": 60,
            "log_pattern": "sshd.*Failed password for"
        },
        "false_positive_considerations": "User forgetting password multiple times, automated scripts with incorrect credentials.",
        "recommended_action": "Temporarily block source IP, alert system administrators, enforce strong passwords and MFA."
    },
    {
        "name": "Malware Download (Executable over HTTP)",
        "description": "Detection of executable file types (.exe, .dll, .msi, .apk, .sh, .bat) being downloaded over unencrypted HTTP, which is suspicious and can indicate malware delivery.",
        "severity": "HIGH",
        "category": "Malware",
        "protocol": "HTTP",
        "port": "80",
        "direction": "INBOUND",
        "condition_summary": "HTTP GET request for a file with an executable extension, where the 'Content-Type' header indicates an executable or binary, and the transfer is over HTTP.",
        "detection_criteria": {
            "uri_extension_regex": "\\.(exe|dll|msi|apk|sh|bat|ps1|vbs)$",
            "content_type_regex": "(application\\/x-msdownload|application\\/octet-stream)",
            "http_status_code": 200,
            "tls_encrypted": false
        },
        "false_positive_considerations": "Legitimate software downloads over HTTP (less common now), internal application updates.",
        "recommended_action": "Block download, alert endpoint security, investigate source and destination."
    },
    {
        "name": "Directory Traversal Attempt (Web Server)",
        "description": "An attacker attempts to access files or directories outside of the intended web root or restricted directories by injecting directory traversal sequences (`../`, `%2e%2e%2f`) into URL paths or parameters.",
        "severity": "MEDIUM",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "URI path or parameter contains sequences indicating directory traversal, such as '..%' or multiple '..//'.",
        "detection_criteria": {
            "uri_regex": "((\\.\\.\\/)|(%2e%2e%2f)|(\\.%2e\\/)|(%2e%2e\\/)|(\\.\\.\\\\)|(%2e%2e%5c)|(\\.%2e\\.)|(\\/\\.\\.\\/))",
            "http_method": ["GET", "POST"]
        },
        "false_positive_considerations": "Misconfigured proxy servers or legitimate but malformed requests (rare).",
        "recommended_action": "Block request, investigate application for vulnerability, ensure proper input validation."
    },
    {
        "name": "Command Injection Attempt (Web)",
        "description": "Injection of operating system commands into user-supplied input fields of a web application. If successful, this allows arbitrary command execution on the web server.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Presence of shell command separators (e.g., ';', '&&', '||', '|', '`') or specific command keywords (e.g., 'cat', 'nc', 'wget', 'rm', 'id') within web parameters.",
        "detection_criteria": {
            "payload_regex": [
                "\\s*(;|=|`|\\|\\||&|\\|)\\s*(cat|ls|id|whoami|ifconfig|ipconfig|netstat|nc|wget|curl|rm|cp|mv|echo|sleep|ping)",
                "\\$\\(\\w+\\)"
            ],
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body", "cookie"]
        },
        "false_positive_considerations": "User input that legitimately contains shell-like syntax (e.g., code snippets in documentation forms). Contextual analysis is key.",
        "recommended_action": "Block source IP, urgent patch of vulnerable application, forensic analysis of server."
    },
    {
        "name": "DNS Exfiltration Attempt",
        "description": "Detection of unusually long or structured DNS queries that might be encoding sensitive data for exfiltration through DNS tunnels.",
        "severity": "HIGH",
        "category": "Data Exfiltration",
        "protocol": "UDP",
        "port": "53",
        "direction": "OUTBOUND",
        "condition_summary": "Outbound DNS queries with domain names exceeding typical length limits (e.g., >63 characters for a label) or containing non-standard base64/hex encoded strings.",
        "detection_criteria": {
            "query_length_threshold": 63,
            "subdomain_count_threshold": 5,
            "entropy_threshold": 0.8,
            "dns_type": "A"
        },
        "false_positive_considerations": "Some legitimate applications or CDN services use long subdomains. Whitelist known trusted domains.",
        "recommended_action": "Block suspicious DNS queries, investigate internal host, alert security team."
    },
    {
        "name": "RDP Brute-Force",
        "description": "Multiple failed login attempts via Remote Desktop Protocol (RDP) from a single source IP, indicating a brute-force attack to gain unauthorized access.",
        "severity": "MEDIUM",
        "category": "Authentication",
        "protocol": "TCP",
        "port": "3389",
        "direction": "INBOUND",
        "condition_summary": "Numerous RDP connection attempts resulting in authentication failures from a single source within a set timeframe.",
        "detection_criteria": {
            "failed_attempts": 15,
            "time_window_seconds": 120,
            "log_pattern": "Security.*Audit Failure.*Logon"
        },
        "false_positive_considerations": "Legitimate users repeatedly mistyping passwords, automated scanners looking for open RDP ports.",
        "recommended_action": "Block source IP, enable Network Level Authentication (NLA), use strong passwords and MFA, limit RDP access to trusted IPs."
    },
    {
        "name": "Suspicious PowerShell Activity",
        "description": "Detection of unusual or potentially malicious PowerShell command line arguments or script blocks, often indicative of post-exploitation activity, malware execution, or living-off-the-land attacks.",
        "severity": "HIGH",
        "category": "Malware/Post-Exploitation",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows event logs show PowerShell commands using obfuscation techniques (-EncodedCommand, -NoProfile, -NonInteractive), downloading remote content (Invoke-WebRequest, bitsadmin), or suspicious network connections.",
        "detection_criteria": {
            "process_name": "powershell.exe",
            "command_line_regex": [
                "-EncodedCommand",
                "-NoProfile",
                "-ExecutionPolicy Bypass",
                "Invoke-WebRequest",
                "Invoke-Expression",
                "New-Object System.Net.WebClient"
            ],
            "event_id": [4688, 4104]
        },
        "false_positive_considerations": "Legitimate administrative scripts using similar parameters. Requires careful tuning and whitelisting of known good scripts.",
        "recommended_action": "Isolate host, collect forensics, investigate process tree, implement PowerShell logging."
    },
    {
        "name": "Web Shell Detection",
        "description": "Detection of suspicious file uploads to a web server that allow remote command execution (web shells) or access to files outside of the web root.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Upload of files with suspicious extensions (e.g., .php, .asp, .jsp, .aspx) containing command execution functions (e.g., `system()`, `eval()`, `shell_exec()`) or base64 encoded payloads.",
        "detection_criteria": {
            "http_method": "POST",
            "uri_path_regex": "\\/(upload|images|files)\\/",
            "file_extension_regex": "\\.(php|asp|jsp|aspx|pl|py)$",
            "payload_regex": [
                "(eval\\(|system\\(|shell_exec\\(|passthru\\(|exec\\(|cmd.exe|sh\\s+-c)"
            ],
            "file_size_limit_kb": 10
        },
        "false_positive_considerations": "Legitimate file uploads if the application allows code or scripts (e.g., development environments).",
        "recommended_action": "Immediately remove suspected web shell, investigate compromise, restore from backup, patch web application."
    },
    {
        "name": "Suspicious Outbound Connection (Unusual Port)",
        "description": "An internal host initiating a connection to an external IP address on a non-standard or high-numbered port that is typically not used for legitimate outbound traffic, potentially indicating C2 communication or data exfiltration.",
        "severity": "MEDIUM",
        "category": "Command and Control/Data Exfiltration",
        "protocol": "TCP/UDP",
        "port": " >1023 (excluding common like 8080, 8443, etc.)",
        "direction": "OUTBOUND",
        "condition_summary": "Internal host establishing an outbound connection to an external destination on a port not commonly associated with known legitimate services (e.g., not HTTP, HTTPS, DNS, NTP, Mail).",
        "detection_criteria": {
            "source_internal": true,
            "dest_external": true,
            "dest_port_range": [1024, 65535],
            "excluded_ports": [8080, 8443, 3306, 5432, 5900, 8000, 9000, 10000, 5060, 5061, 5222, 5223]
        },
        "false_positive_considerations": "Legitimate peer-to-peer applications, custom software with non-standard ports, cloud services. Requires whitelisting or baselining.",
        "recommended_action": "Investigate internal host, analyze traffic payload if possible, check for malware."
    },
    {
        "name": "Suspicious Inbound Connection (Unusual Port)",
        "description": "An external source attempting to connect to an internal host on a non-standard or unmonitored port, often indicative of reconnaissance or a targeted attack on a specific service.",
        "severity": "LOW",
        "category": "Reconnaissance/Targeted Attack",
        "protocol": "TCP/UDP",
        "port": " >1023 (excluding common like 8080, 8443, etc.)",
        "direction": "INBOUND",
        "condition_summary": "External source attempting connection to an internal host on a non-standard port that is not explicitly opened or expected to be in use.",
        "detection_criteria": {
            "source_external": true,
            "dest_internal": true,
            "dest_port_range": [1024, 65535],
            "excluded_ports": [8080, 8443, 3306, 5432, 5900, 8000, 9000, 10000]
        },
        "false_positive_considerations": "Legitimate external parties attempting to reach services not externally exposed, misconfigured firewalls. Often noise from internet scans.",
        "recommended_action": "Review firewall rules, check for open ports on target, log and monitor."
    },
    {
        "name": "Privilege Escalation Attempt (Linux)",
        "description": "Detection of common Linux commands or activities associated with attempts to gain higher privileges (e.g., using `sudo`, `su`, or exploiting known vulnerabilities). This is typically an internal threat after initial compromise.",
        "severity": "HIGH",
        "category": "Post-Exploitation",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Log entries showing unusual `sudo` usage (e.g., non-root user running `sudo su -`, or `sudo` on suspicious binaries), execution of known exploit tools, or modification of `/etc/passwd`, `/etc/shadow`.",
        "detection_criteria": {
            "log_source": "auth.log",
            "log_pattern_regex": [
                "sudo: .*!authenticate",
                "sudo: .*ALL",
                "su:.*authentication failure",
                "chmod \\+s \\/bin\\/(bash|sh|dash)",
                "chown root:\\s*\\/etc\\/(passwd|shadow)"
            ],
            "unusual_process_execution": ["dirtycow", "pkexec", "polkit"]
        },
        "false_positive_considerations": "Legitimate administrative tasks, automated scripts for system management.",
        "recommended_action": "Isolate host, investigate compromised user, review system logs, patch kernel/software."
    },
    {
        "name": "Excessive Failed SMB/Windows Share Logins",
        "description": "Numerous failed attempts to authenticate against Windows SMB shares from an internal or external source, possibly indicating a password guessing attack or a lateral movement attempt.",
        "severity": "MEDIUM",
        "category": "Authentication/Lateral Movement",
        "protocol": "TCP",
        "port": "445",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "High number of 'Audit Failure' events (Event ID 4625) for network logon types (e.g., Type 3 - Network) within Windows Security Event Logs, originating from a single source IP or targeting a specific user.",
        "detection_criteria": {
            "log_source": "Windows Security Log",
            "event_id": 4625,
            "logon_type": 3,
            "failed_attempts": 20,
            "time_window_seconds": 120
        },
        "false_positive_considerations": "Legitimate users with mistyped passwords, network connectivity issues, misconfigured services.",
        "recommended_action": "Block source IP, review user accounts, enable account lockout policies, enforce strong passwords."
    },
    {
        "name": "DNS Cache Poisoning Attempt",
        "description": "Detection of anomalous DNS query/response patterns, specifically responses from unexpected sources or with incorrect transaction IDs, indicating an attempt to manipulate DNS caches and redirect traffic.",
        "severity": "HIGH",
        "category": "Man-in-the-Middle",
        "protocol": "UDP",
        "port": "53",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "Multiple DNS responses for the same query arriving from different or unexpected IP addresses, or DNS responses with incorrect transaction IDs (RCODE 0 but wrong ID).",
        "detection_criteria": {
            "dns_query_match": true,
            "response_source_mismatch": true,
            "transaction_id_mismatch_ratio": 0.5,
            "response_rate_per_query": 5
        },
        "false_positive_considerations": "Legitimate DNS server redundancy or minor network glitches. Requires detailed DNS traffic analysis.",
        "recommended_action": "Alert DNS administrators, check DNS server configuration, consider implementing DNSSEC."
    },
    {
        "name": "Remote Code Execution (RCE) Exploit Pattern",
        "description": "Detection of highly suspicious payload patterns characteristic of remote code execution attempts, often involving specific function calls, shell commands, or obfuscated code designed to exploit vulnerabilities in applications.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS/various",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Traffic payload contains known RCE exploit strings, often seen in specific CVEs, or highly encoded/obfuscated code used to bypass traditional filters.",
        "detection_criteria": {
            "payload_regex": [
                "() { :; }; echo;",
                "eval\\(base64_decode\\(",
                "JBAS-CLI",
                "struts.context",
                "weblogic\\.utils\\.io\\.oif"
            ],
            "http_method": ["GET", "POST", "PUT"],
            "protocol_specific_contexts": ["HTTP Headers", "URI paths", "POST bodies"]
        },
        "false_positive_considerations": "Very low false positive rate if signatures are precise and limited to known exploit patterns. Requires continuous updates for new vulnerabilities.",
        "recommended_action": "Immediately block source, isolate target, perform forensic analysis, apply patches urgently."
    },
    {
        "name": "ARP Spoofing/Poisoning",
        "description": "Detection of gratuitous ARP replies that claim incorrect MAC-to-IP mappings, indicating an attacker is attempting to redirect network traffic to themselves.",
        "severity": "HIGH",
        "category": "Man-in-the-Middle",
        "protocol": "ARP",
        "port": "N/A",
        "direction": "LOCAL_NETWORK",
        "condition_summary": "Multiple unsolicited ARP replies (gratuitous ARPs) claiming the same IP address belongs to different MAC addresses, or claiming the gateway's IP belongs to a new MAC.",
        "detection_criteria": {
            "duplicate_ip_mac_binding": true,
            "arp_reply_rate": 5,
            "gateway_ip_mac_change": true,
            "time_window_seconds": 10
        },
        "false_positive_considerations": "Network reconfigurations or legitimate device changes (e.g., router failover). Requires baseline of stable ARP entries.",
        "recommended_action": "Alert network administrators, disconnect suspected spoofing device, enable ARP inspection on switches."
    },
    {
        "name": "SQL Injection (Blind/Time-Based)",
        "description": "An attacker uses time delays or conditional responses to infer database information when direct error messages are not available. This is harder to detect than error-based SQLi.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests containing time-delay SQL functions (e.g., `SLEEP()`, `BENCHMARK()`, `pg_sleep()`) or conditional SQL logic, followed by an unusual delay in HTTP response.",
        "detection_criteria": {
            "payload_regex": [
                "SLEEP\\(\\d+\\)",
                "BENCHMARK\\(\\d+,",
                "pg_sleep\\(\\d+\\)",
                "IF\\(\\d=\\d,"
            ],
            "http_method": ["GET", "POST"],
            "response_time_deviation_factor": 3,
            "response_time_min_ms": 1000
        },
        "false_positive_considerations": "Network latency, server load, legitimate application delays. Requires baselining response times.",
        "recommended_action": "Block source IP, review application logs, patch vulnerable application."
    },
    {
        "name": "Excessive File System Access (SMB/NFS)",
        "description": "An internal or compromised host making an unusually high number of file read/write/delete operations on shared network drives (SMB/NFS), potentially indicating data exfiltration, ransomware, or malware activity.",
        "severity": "HIGH",
        "category": "Data Exfiltration/Malware",
        "protocol": "SMB/NFS",
        "port": "445, 2049",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "Abnormally high rate of file access events from a single source host to shared network resources, especially across many different files or directories.",
        "detection_criteria": {
            "file_ops_per_min_threshold": 500,
            "unique_files_accessed_threshold": 100,
            "time_window_seconds": 60,
            "access_types": ["read", "write", "delete"]
        },
        "false_positive_considerations": "Legitimate automated backups, large file transfers, indexing services. Requires baselining for each host/share.",
        "recommended_action": "Isolate host, investigate user/process, restore affected files from backup, scan for ransomware."
    },
    {
        "name": "HTTP Flood Attack",
        "description": "An application-layer DDoS attack where an attacker sends a high volume of seemingly legitimate HTTP GET or POST requests to a web server, aiming to exhaust server resources (CPU, memory, database connections).",
        "severity": "HIGH",
        "category": "Denial of Service",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Abnormal increase in HTTP requests from a single or multiple sources to a web application, exceeding normal traffic patterns, without proper session establishment or completion.",
        "detection_criteria": {
            "request_rate_per_sec": 500,
            "time_window_seconds": 10,
            "user_agent_diversity_low": true,
            "referer_header_missing_or_spoofed": true,
            "high_request_to_response_ratio": 0.8
        },
        "false_positive_considerations": "Flash crowds, legitimate traffic spikes for popular content. Requires sophisticated anomaly detection beyond simple rate limiting.",
        "recommended_action": "Deploy WAF, implement rate limiting, block source IPs, use CAPTCHA, enable CDN protection."
    },
    {
        "name": "Suspicious NMAP Scan (Aggressive)",
        "description": "Detection of highly aggressive NMAP scanning flags (`-A`, `-O`, `-sC`, `-sV`) which enable OS detection, version detection, script scanning, and often include more intrusive probes. This indicates thorough reconnaissance.",
        "severity": "MEDIUM",
        "category": "Reconnaissance",
        "protocol": "TCP/UDP/ICMP",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Traffic patterns consistent with an aggressive NMAP scan, including unusual flag combinations, rapid-fire probes across many ports, and specific NMAP-generated packets (e.g., specific TCP options).",
        "detection_criteria": {
            "nmap_fingerprint_in_payload": true,
            "combined_scan_flags_present": true,
            "high_port_scan_rate": true,
            "icmp_timestamp_request_present": true
        },
        "false_positive_considerations": "Legitimate internal security audits using NMAP. Whitelist known scanning IPs.",
        "recommended_action": "Log and alert, block source IP if unauthorized, scan target for new vulnerabilities."
    },
    {
        "name": "Log4j/Log4Shell Exploit Attempt (CVE-2021-44228)",
        "description": "Detection of specific JNDI lookup strings in HTTP requests or other application input, which exploit the Log4j vulnerability to achieve remote code execution.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS/various",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Presence of specific JNDI lookup strings (`${jndi:ldap://`, `${jndi:dns://`, `${jndi:rmi://`) in HTTP headers (User-Agent, Referer, X-Forwarded-For), URI, or POST body.",
        "detection_criteria": {
            "payload_regex": [
                "\\$\\{jndi:(ldap|rmi|dns|nis|nds|corba|iiop):\\/\\/",
                "\\$\\{lower:\\$\\{",
                "\\$\\{upper:\\$\\{"
            ],
            "param_location": ["uri", "header", "body"],
            "case_insensitive": true
        },
        "false_positive_considerations": "Highly unlikely to be false positive due to unique signature.",
        "recommended_action": "Immediately block source, isolate vulnerable systems, patch Log4j to a secure version, forensic analysis."
    },
    {
        "name": "Suspicious Account Creation",
        "description": "Detection of unusual spikes in new user account creations or creation of accounts with suspicious naming conventions (e.g., 'admin1', 'testuser', common dictionary words) within a short period.",
        "severity": "HIGH",
        "category": "Authentication/Lateral Movement",
        "protocol": "N/A (Application/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Spike in 'Account Created' events (e.g., Windows Event ID 4720, Linux /etc/passwd modifications) beyond a baseline, especially for privileged groups or with generic usernames.",
        "detection_criteria": {
            "event_id": 4720,
            "new_account_rate_per_hour": 5,
            "suspicious_username_regex": "(admin|test|temp|user|guest)\\d*",
            "added_to_privileged_group": true
        },
        "false_positive_considerations": "Legitimate batch user creation, onboarding new teams. Requires baselining and whitelisting of automated account creation processes.",
        "recommended_action": "Disable suspicious accounts, investigate source of creation, review access logs."
    },
    {
        "name": "Data Exfiltration (Large Outbound Transfer)",
        "description": "An unusually large volume of data being transferred from internal systems to external destinations, potentially indicating sensitive data theft.",
        "severity": "HIGH",
        "category": "Data Exfiltration",
        "protocol": "TCP/UDP/HTTP/FTP",
        "port": "any",
        "direction": "OUTBOUND",
        "condition_summary": "Sustained high outbound bandwidth utilization or large single file transfers to external, non-whitelisted destinations.",
        "detection_criteria": {
            "outbound_data_threshold_mb": 100,
            "time_window_seconds": 300,
            "dest_not_whitelisted_category": ["cloud_storage", "unknown_ip"],
            "single_flow_size_mb": 50
        },
        "false_positive_considerations": "Legitimate cloud backups, large file sharing for collaboration, software updates, content delivery. Requires extensive baselining and whitelisting.",
        "recommended_action": "Alert security team, investigate source host, block suspicious outbound connections, perform forensic analysis."
    },
    {
        "name": "Mass File Renaming/Deletion (Ransomware Indicator)",
        "description": "Rapid and widespread renaming or deletion of files on network shares or endpoints, a common behavior observed during ransomware attacks.",
        "severity": "CRITICAL",
        "category": "Malware/Ransomware",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "High volume of file rename or delete operations, especially on common document/media file types, within a short period across multiple directories, often accompanied by new files with unusual extensions (e.g., .locked, .crypt).",
        "detection_criteria": {
            "file_rename_rate_per_min": 200,
            "file_delete_rate_per_min": 100,
            "time_window_seconds": 60,
            "target_file_extensions": ["doc", "docx", "xls", "xlsx", "ppt", "pptx", "pdf", "jpg", "png", "mp3", "mp4", "zip"],
            "new_unusual_extensions_present": true
        },
        "false_positive_considerations": "Legitimate automated processes like data migration, large-scale cleanup scripts. Requires careful whitelisting of such processes.",
        "recommended_action": "Immediately isolate affected systems and network segments, initiate incident response, restore from known good backups."
    },
    {
        "name": "Heartbleed Exploit Attempt (CVE-2014-0160)",
        "description": "Detection of malformed TLS Heartbeat requests that attempt to exploit the Heartbleed vulnerability, potentially leading to information disclosure from server memory.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "TCP",
        "port": "443",
        "direction": "INBOUND",
        "condition_summary": "TLS Heartbeat request with a payload length significantly larger than the actual payload data, indicating a Heartbleed exploit attempt.",
        "detection_criteria": {
            "tls_heartbeat_message": true,
            "payload_length_header_mismatch_ratio": 10
        },
        "false_positive_considerations": "Highly unlikely if the signature correctly identifies the Heartbleed-specific malformation.",
        "recommended_action": "Block source, patch vulnerable OpenSSL versions, rotate affected certificates and credentials."
    },
    {
        "name": "Shellshock Exploit Attempt (CVE-2014-6271)",
        "description": "Detection of specific environment variable declarations with appended commands, exploiting the Shellshock vulnerability in Bash to achieve remote code execution.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS/various",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Presence of the specific Shellshock signature (`() { :;};`) followed by malicious commands in HTTP headers (e.g., User-Agent, Referer, Cookie) or other application inputs.",
        "detection_criteria": {
            "payload_regex": "\\(\\) { :;};.*?\\/bin\\/(bash|sh|csh|ksh)",
            "param_location": ["header", "uri", "body"],
            "case_insensitive": true
        },
        "false_positive_considerations": "Highly unlikely due to the unique nature of the exploit string.",
        "recommended_action": "Immediately block source, patch vulnerable Bash versions, forensic analysis of affected servers."
    },
    {
        "name": "DNS Zone Transfer Attempt",
        "description": "A client attempting to initiate an unauthorized DNS zone transfer (AXFR or IXFR request) from a DNS server, often a reconnaissance step to map a network's domain structure.",
        "severity": "MEDIUM",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": "53",
        "direction": "INBOUND",
        "condition_summary": "TCP connection to port 53 followed by a DNS query for type AXFR (All Zone Transfer) or IXFR (Incremental Zone Transfer) from an unauthorized IP.",
        "detection_criteria": {
            "tcp_connection_to_dns_port": true,
            "dns_query_type": ["AXFR", "IXFR"],
            "source_ip_not_whitelisted": true
        },
        "false_positive_considerations": "Legitimate secondary DNS servers or monitoring tools performing zone transfers. Whitelist known authoritative DNS servers.",
        "recommended_action": "Block source IP, restrict zone transfers to authorized IPs only."
    },
    {
        "name": "Port Knocking Sequence Detection",
        "description": "Observing a specific sequence of connection attempts to a series of closed ports, indicating a hidden port knocking mechanism trying to open a service.",
        "severity": "INFORMATIONAL",
        "category": "Reconnaissance/Access",
        "protocol": "TCP/UDP",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "A sequence of connection attempts to specific non-standard ports in a predefined order from a single source IP, potentially followed by a connection to a previously closed port.",
        "detection_criteria": {
            "port_sequence": ["1234", "5678", "9012"],
            "time_between_knocks_seconds": 5,
            "source_ip_consistent": true
        },
        "false_positive_considerations": "Random scanning might coincidentally hit a sequence (low probability). Legitimate users of a port knocking service (if implemented).",
        "recommended_action": "Log and monitor, alert if followed by access to a previously hidden service."
    },
    {
        "name": "Suspicious RDP Login from Geolocation",
        "description": "Successful RDP login attempts originating from IP addresses associated with unusual or high-risk geographic locations that are outside normal operational areas.",
        "severity": "HIGH",
        "category": "Authentication/Access",
        "protocol": "TCP",
        "port": "3389",
        "direction": "INBOUND",
        "condition_summary": "Successful RDP authentication (Windows Event ID 4624) where the source IP's geolocation is outside of predefined allowed countries/regions, or from known darknet/VPN exit nodes.",
        "detection_criteria": {
            "event_id": 4624,
            "logon_type": 10,
            "source_ip_geolocation_risk_score": 0.8,
            "excluded_geolocations": ["US", "CA", "GB"]
        },
        "false_positive_considerations": "Legitimate remote access by employees traveling or using VPNs. Requires accurate geolocation data and whitelisting trusted VPNs.",
        "recommended_action": "Force password reset for affected account, investigate user activity, review network access policies."
    },
    {
        "name": "Network Reconnaissance (Ping Sweep)",
        "description": "An attacker sends ICMP Echo Request packets to a range of IP addresses within a subnet to identify active hosts.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "ICMP",
        "port": "N/A",
        "direction": "INBOUND",
        "condition_summary": "A single source sending ICMP Echo Requests to multiple distinct IP addresses within a short timeframe on the same subnet.",
        "detection_criteria": {
            "unique_dest_ips_per_source": 10,
            "icmp_type": 8,
            "time_window_seconds": 30
        },
        "false_positive_considerations": "Legitimate network monitoring tools or internal scripts. Whitelist known monitoring tools.",
        "recommended_action": "Log and monitor, escalate if combined with other suspicious activities."
    },
    {
        "name": "SQL Injection (Union-Based)",
        "description": "An attacker uses the SQL UNION operator to combine the results of a malicious query with a legitimate one, typically to exfiltrate data from other tables.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests containing 'UNION SELECT' keywords and attempting to match column counts or specific data types, often indicating data exfiltration.",
        "detection_criteria": {
            "payload_regex": "UNION\\s+SELECT\\s+.*\\b",
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body", "cookie", "header"]
        },
        "false_positive_considerations": "Legitimate use of 'UNION SELECT' in application logic (rare for user-supplied input).",
        "recommended_action": "Block source IP, review application logs, patch vulnerable application, conduct penetration testing."
    },
    {
        "name": "HTTP Method Tampering",
        "description": "Attempts to use HTTP methods (e.g., PUT, DELETE) on resources where they are not expected or authorized, potentially indicating an attempt to manipulate or upload files.",
        "severity": "MEDIUM",
        "category": "Exploitation/Configuration Misuse",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests using methods like PUT or DELETE on paths that are typically handled by GET or POST, especially on sensitive endpoints (e.g., `/admin`, `/upload`).",
        "detection_criteria": {
            "http_method": ["PUT", "DELETE", "CONNECT", "TRACE"],
            "uri_path_regex": "\\/(admin|upload|webapi|api)\\/",
            "response_status_code": [200, 204]
        },
        "false_positive_considerations": "Legitimate RESTful API calls using these methods if the application is designed for it. Requires knowing application's expected methods.",
        "recommended_action": "Block request, enforce strict HTTP method policies on web server/WAF."
    },
    {
        "name": "Suspicious Inbound SSH Connection (Unusual Port)",
        "description": "An external source attempting to connect to SSH on a non-standard port, indicating a targeted or obfuscated attempt to reach the SSH service.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": ">1023 (excluding 22)",
        "direction": "INBOUND",
        "condition_summary": "External IP attempting to connect to an internal host on a high port, followed by SSH negotiation (SSH banner exchange).",
        "detection_criteria": {
            "dest_port_range": [1024, 65535],
            "excluded_ports": [22, 80, 443],
            "protocol_signature_ssh_banner": true
        },
        "false_positive_considerations": "Legitimate users who have been told to connect to a non-standard SSH port.",
        "recommended_action": "Log and monitor, ensure SSH is not exposed on unusual ports unless intentionally configured."
    },
    {
        "name": "SSL/TLS Renegotiation Attack",
        "description": "Detection of repeated SSL/TLS renegotiations from a single client, which could be an attempt to consume server resources or bypass security controls (CVE-2009-3555).",
        "severity": "MEDIUM",
        "category": "Denial of Service",
        "protocol": "TCP",
        "port": "443",
        "direction": "INBOUND",
        "condition_summary": "An excessive number of SSL/TLS renegotiation requests initiated by a single client within a short time frame.",
        "detection_criteria": {
            "tls_renegotiation_request_rate": 10,
            "time_window_seconds": 10,
            "source_ip_consistent": true
        },
        "false_positive_considerations": "Some legitimate applications or load balancers might trigger renegotiations, but high rates are often suspicious.",
        "recommended_action": "Rate-limit renegotiations, alert, ensure TLS stacks are patched against CVE-2009-3555."
    },
    {
        "name": "SSRF (Server-Side Request Forgery) Attempt",
        "description": "An attacker forces a server-side application to make requests to an unintended location, potentially allowing access to internal systems, cloud metadata, or other services.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests with URL parameters containing internal IP addresses (e.g., `127.0.0.1`, `169.254.169.254`), non-HTTP schemes (e.g., `file:///`, `gopher://`), or unusual private network ranges.",
        "detection_criteria": {
            "payload_regex": [
                "(127\\.0\\.0\\.1|localhost|10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|172\\.(1[6-9]|2\\d|3[0-1])\\.\\d{1,3}\\.\\d{1,3}|192\\.168\\.\\d{1,3}\\.\\d{1,3})",
                "(file:\\/\\/\\/|gopher:\\/\\/)"
            ],
            "http_method": ["GET", "POST"]
        },
        "false_positive_considerations": "Legitimate internal callbacks or URLs provided by authenticated users if the application supports it.",
        "recommended_action": "Block request, validate all user-supplied URLs, implement whitelisting for server-side requests."
    },
    {
        "name": "Insecure Deserialization Attempt",
        "description": "Detection of potentially malicious serialized objects or data structures within application input, aiming to exploit insecure deserialization vulnerabilities for remote code execution or denial of service.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS/various",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Traffic payload containing serialized object headers or signatures for known vulnerable deserialization frameworks (e.g., Java's `readObject()`, PHP's `unserialize()`, Python's `pickle.load()`) with suspicious classes or data.",
        "detection_criteria": {
            "payload_regex": [
                "ACED0005",
                "O:.*?:\\d+:\"\\w+\":\\d+:{",
                "__PYPACKAGE__",
                "php:object"
            ],
            "param_location": ["body", "cookie", "header"]
        },
        "false_positive_considerations": "Legitimate application data that uses serialization. Requires deep packet inspection and context.",
        "recommended_action": "Block request, patch application, avoid untrusted deserialization, implement strict input validation."
    },
    {
        "name": "Credential Stuffing Attempt",
        "description": "Numerous login attempts using previously compromised username/password pairs, often from different source IPs, against an authentication service.",
        "severity": "HIGH",
        "category": "Authentication",
        "protocol": "HTTP/HTTPS/various",
        "port": "80, 443, 22, 3389",
        "direction": "INBOUND",
        "condition_summary": "High volume of failed and sometimes successful login attempts from geographically diverse or frequently changing IPs, targeting multiple distinct user accounts.",
        "detection_criteria": {
            "failed_logins_rate_per_min": 50,
            "successful_logins_rate_per_min": 5,
            "unique_source_ips_rate": 10,
            "time_window_seconds": 300,
            "user_agent_diversity_low": true,
            "credential_format_similarity": true
        },
        "false_positive_considerations": "Legitimate traffic from large organizations using rotating proxies, or public Wi-Fi where many users share an IP.",
        "recommended_action": "Implement rate limiting, CAPTCHA, MFA, password change policies, dark web monitoring for compromised credentials."
    },
    {
        "name": "Anomalous DNS Query Volume",
        "description": "A significant increase in DNS queries from a single internal host, potentially indicating malware (botnet C2), excessive internal scanning, or a misconfigured application.",
        "severity": "MEDIUM",
        "category": "Command and Control/Reconnaissance",
        "protocol": "UDP/TCP",
        "port": "53",
        "direction": "OUTBOUND",
        "condition_summary": "Unusually high number of DNS queries originating from a specific internal host, exceeding its established baseline by a significant factor.",
        "detection_criteria": {
            "query_rate_per_min_deviation_factor": 5,
            "time_window_seconds": 300,
            "target_internal_dns": true,
            "high_nxdomain_rate": true
        },
        "false_positive_considerations": "New applications being deployed, large-scale software updates, legitimate network diagnostics. Requires baselining and adaptive thresholds.",
        "recommended_action": "Investigate internal host, check for malware, review application logs for misconfigurations."
    },
    {
        "name": "SQL Injection (Stacked Queries)",
        "description": "An attacker uses a semicolon (`;`) to add additional SQL statements to an existing query, allowing them to execute multiple commands (e.g., delete data, create users).",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Presence of a semicolon (`;`) followed by another SQL keyword (e.g., `INSERT`, `UPDATE`, `DELETE`, `CREATE`) within an application's SQL query parameter.",
        "detection_criteria": {
            "payload_regex": ";\\s*(INSERT|UPDATE|DELETE|CREATE|DROP|ALTER)\\s+",
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body"]
        },
        "false_positive_considerations": "Extremely rare in legitimate input; highly indicative of attack.",
        "recommended_action": "Block source IP, review application logs, patch vulnerable application."
    },
    {
        "name": "File Inclusion (LFI/RFI) Attempt",
        "description": "An attacker attempts to include arbitrary files (Local File Inclusion) or remote files (Remote File Inclusion) into a web application, often leading to information disclosure or remote code execution.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests with parameters containing file paths (e.g., `/etc/passwd`, `C:\\Windows\\win.ini`) or URLs to remote files (`http://attacker.com/shell.txt`) for inclusion.",
        "detection_criteria": {
            "payload_regex": [
                "(file:|\\/proc\\/self\\/environ|\\/etc\\/passwd|\\/etc\\/shadow|C:\\\\Windows\\\\win\\.ini|php:\\/\\/filter)",
                "(http:\\/\\/|https:\\/\\/|ftp:\\/\\/).*?\\.(php|txt|log|jpg)"
            ],
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body"]
        },
        "false_positive_considerations": "Legitimate file path references in application parameters (rare if proper input validation).",
        "recommended_action": "Block request, patch application for file inclusion vulnerability, implement strict input validation."
    },
    {
        "name": "XSS (Stored/Persistent) Attempt",
        "description": "An attacker injects malicious script into a web application's database or persistent storage, which is then served to other users whenever they access the affected content.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Detection of persistent XSS payload patterns in incoming requests to application endpoints that accept user-generated content for storage (e.g., forum posts, comments, profiles).",
        "detection_criteria": {
            "payload_regex": [
                "<script.*?>",
                "javascript:",
                "onload=",
                "onerror=",
                "eval\\(",
                "document\\.cookie",
                "<img>\\s+src=\"x\"\\s+onerror="
            ],
            "http_method": ["POST", "PUT"],
            "uri_path_regex": "\\/(post|comment|profile|message)\\/",
            "param_location": ["body"]
        },
        "false_positive_considerations": "Similar to reflected XSS, applications that legitimately process user-supplied HTML. Requires server-side sanitization.",
        "recommended_action": "Block source IP, sanitize all stored user input, review application for XSS vulnerabilities."
    },
    {
        "name": "Zero-Day Exploit Signature",
        "description": "Detection of unusual and highly anomalous traffic patterns, unexpected protocol deviations, or specific shellcode-like byte sequences that don't match known threats, potentially indicating a zero-day exploit.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "any",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Identification of novel, highly unusual, or malformed protocol traffic that deviates significantly from RFCs or expected behavior, combined with indications of code execution (e.g., unexpected binaries, network connections).",
        "detection_criteria": {
            "protocol_deviation_score": 0.9,
            "high_entropy_payload": true,
            "unexpected_flags_or_options": true,
            "small_segment_many_connections": true,
            "time_window_seconds": 1
        },
        "false_positive_considerations": "Highly prone to false positives due to its generic nature. Should be used for deep inspection and manual review only.",
        "recommended_action": "Isolate target, alert security team immediately, capture full packet trace for analysis, consider threat intelligence feeds."
    },
    {
        "name": "Credential Stuffing (Successful)",
        "description": "Successful logins to multiple accounts from a single source IP, likely using leaked credentials from a data breach.",
        "severity": "CRITICAL",
        "category": "Authentication",
        "protocol": "HTTP/HTTPS/various",
        "port": "80, 443, 22, 3389",
        "direction": "INBOUND",
        "condition_summary": "Detection of multiple distinct user accounts successfully logging in from a single source IP within a limited time window, especially if those accounts have not previously logged in from that IP, or if the IP is known for suspicious activity.",
        "detection_criteria": {
            "successful_logins_per_source_ip": 5,
            "unique_user_accounts_accessed": true,
            "time_window_seconds": 300,
            "new_source_ip_for_account": true
        },
        "false_positive_considerations": "Shared office IPs, legitimate VPNs, or internal scanning tools. Requires context of user and network behavior.",
        "recommended_action": "Force password reset for all affected accounts, enable MFA, investigate user activity, block source IP, notify users of potential compromise."
    },
    {
        "name": "Web Application Scanner Activity",
        "description": "Detection of patterns indicative of an automated web application vulnerability scanner (e.g., Nessus, Acunetix, Burp Suite), often used for reconnaissance by attackers.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests containing specific User-Agent strings, common scanner paths (e.g., `/test.php`, `/admin`), or rapid sequential probing of URLs for known vulnerabilities.",
        "detection_criteria": {
            "user_agent_regex": "(Nessus|Acunetix|BurpSuite|Nikto|ZAP|GoBuster)",
            "uri_path_regex": "\\/(test\\.php|login\\.bak|backup\\.zip|db\\.sql)",
            "request_rate_per_uri": 10,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Legitimate search engine crawlers (should be whitelisted or respect robots.txt), performance monitoring tools.",
        "recommended_action": "Log and monitor, ensure web application is hardened, block if unauthorized."
    },
    {
        "name": "OAuth/SSO Abuse Attempt",
        "description": "Detection of suspicious activity related to OAuth or Single Sign-On (SSO) flows, such as token replay, excessive token requests, or attempts to manipulate redirect URIs.",
        "severity": "HIGH",
        "category": "Authentication/Access",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Repeated use of the same OAuth token, unusual request patterns to authorization/token endpoints, or malformed redirect_uri parameters in OAuth flows.",
        "detection_criteria": {
            "oauth_token_reuse_count": 3,
            "auth_code_grant_rate_per_min": 10,
            "redirect_uri_regex_mismatch": true,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Client application misconfigurations, network errors. Requires understanding of OAuth/SSO flows.",
        "recommended_action": "Invalidate token, alert security team, review OAuth/SSO configuration, implement strong CSRF protection."
    },
    {
        "name": "DDoS Reflection/Amplification Attack",
        "description": "Detection of traffic patterns where a small query to a vulnerable service (e.g., NTP, DNS, SSDP, Memcached) generates a disproportionately large response, often spoofed to target a victim, leading to a Distributed Denial-of-Service (DDoS) attack.",
        "severity": "CRITICAL",
        "category": "Denial of Service",
        "protocol": "UDP",
        "port": "53, 123, 1900, 11211",
        "direction": "OUTBOUND/INBOUND",
        "condition_summary": "High volume of outbound small queries to reflector services, with a much larger volume of inbound responses from those services, possibly to a spoofed victim IP. High amplification factor observed.",
        "detection_criteria": {
            "inbound_outbound_ratio": 10,
            "packet_rate_per_sec": 5000,
            "source_port_not_standard": true,
            "service_specific_payloads": ["DNS ANY query", "NTP MONLIST", "SSDP M-SEARCH", "Memcached get stats"],
            "time_window_seconds": 5
        },
        "false_positive_considerations": "Legitimate large responses from servers (e.g., DNS zone transfers). Requires correlation of source, destination, and payload amplification.",
        "recommended_action": "Implement BCP38 (source IP validation), rate-limit vulnerable services, contact upstream provider for DDoS mitigation."
    },
    {
        "name": "Lateral Movement (SMB/PsExec)",
        "description": "Detection of suspicious execution of services or processes via SMB, indicative of an attacker moving laterally within a network using tools like PsExec or WMI.",
        "severity": "HIGH",
        "category": "Lateral Movement/Post-Exploitation",
        "protocol": "TCP",
        "port": "445",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "Creation of temporary services (e.g., 'PSEXECSVC') on remote hosts, followed by authentication and remote command execution over SMB, or WMI activity from unusual sources.",
        "detection_criteria": {
            "smb_pipe_access_regex": "\\\\svcctl|\\\\remcom|\\\\psexec",
            "windows_event_id": [7045, 4697, 4688],
            "process_creation_regex": "(PSEXECSVC|WMIC)",
            "source_ip_internal": true,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Legitimate administrative tools that use PsExec/WMI (e.g., SCCM, monitoring agents). Whitelist known tools and source IPs.",
        "recommended_action": "Isolate affected hosts, disable unnecessary admin shares, enforce least privilege, implement endpoint detection and response (EDR)."
    },
    {
        "name": "Reconnaissance (Windows Share Enumeration)",
        "description": "An attacker attempting to enumerate Windows network shares (SMB) to discover accessible resources and gather information about the network structure.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": "445",
        "direction": "INBOUND",
        "condition_summary": "Multiple `NetShareEnum` or `NetWkstaUserEnum` API calls over SMB from a single source, targeting multiple hosts or repeatedly querying shares.",
        "detection_criteria": {
            "smb_api_call_regex": "(NetShareEnum|NetWkstaUserEnum)",
            "query_rate_per_target": 10,
            "time_window_seconds": 30
        },
        "false_positive_considerations": "Legitimate network discovery by IT tools, or internal asset management systems. Requires whitelisting.",
        "recommended_action": "Log and monitor, ensure proper share permissions, disable unnecessary shares."
    },
    {
        "name": "SQL Injection (Authentication Bypass)",
        "description": "Specific SQL injection payloads designed to bypass login forms by always evaluating to true, granting unauthorized access.",
        "severity": "CRITICAL",
        "category": "Exploitation/Authentication",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP POST request to a login endpoint containing SQL injection patterns designed to bypass authentication (e.g., `' OR '1'='1`).",
        "detection_criteria": {
            "http_method": "POST",
            "uri_path_regex": "\\/(login|authenticate|signin)\\/",
            "payload_regex": [
                "'\\s*OR\\s*'1'='1",
                "\"\\s*OR\\s*\"1\"=\"1",
                "admin'--",
                "admin'\\s*#",
                "admin'\\/\\*.*\\*\\/"
            ],
            "param_location": ["body"]
        },
        "false_positive_considerations": "Extremely low false positive rate; highly indicative of attack.",
        "recommended_action": "Block source IP, review application logs, patch login vulnerability, force password reset for affected accounts."
    },
    {
        "name": "XXE (XML External Entity) Injection",
        "description": "Detection of XML input containing external entity declarations, which can be exploited to read local files, initiate SSRF, or perform denial of service attacks.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "XML content in HTTP requests containing DOCTYPE declarations with SYSTEM or PUBLIC IDs referring to external entities, especially `file://` or `http://` URLs.",
        "detection_criteria": {
            "content_type": "application/xml",
            "payload_regex": "<!DOCTYPE\\s+.*\\s+SYSTEM\\s+[\"'](file|http|https|ftp|gopher):\\/\\/",
            "http_method": ["POST", "PUT"]
        },
        "false_positive_considerations": "Legitimate XML schemas with external DTDs (less common in user-supplied input).",
        "recommended_action": "Block request, disable external entity processing in XML parsers, implement input validation."
    },
    {
        "name": "Memory Corruption Exploit Attempt",
        "description": "Detection of highly malformed packets, unusual buffer sizes, or specific byte sequences indicative of attempts to exploit memory corruption vulnerabilities (e.g., buffer overflows, format string bugs).",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "any",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Traffic containing unusually long strings, specifically crafted byte patterns (e.g., NOP sleds, shellcode), or unexpected return addresses, aiming to overwrite memory.",
        "detection_criteria": {
            "payload_regex": "(%x%n|%s%n|%p%n|\\x90\\x90\\x90\\x90|\\xcc\\xcc\\xcc\\xcc)",
            "buffer_overflow_size": 1024,
            "time_window_seconds": 1
        },
        "false_positive_considerations": "Highly technical and specific signatures; low false positives if well-defined for known exploits.",
        "recommended_action": "Isolate target, capture full packet trace, perform forensic analysis, apply patches urgently."
    },
    {
        "name": "Suspicious RDP Login from Non-Admin User to Critical Server",
        "description": "A successful RDP login by a non-administrative user to a critical server, which might indicate a compromised account or unauthorized access.",
        "severity": "MEDIUM",
        "category": "Access/Post-Exploitation",
        "protocol": "TCP",
        "port": "3389",
        "direction": "INBOUND",
        "condition_summary": "Successful RDP login by a user account that is not part of the 'Administrators' group (Windows Event ID 4624, Logon Type 10) on a designated critical server.",
        "detection_criteria": {
            "event_id": 4624,
            "logon_type": 10,
            "user_in_admin_group": false,
            "target_host_critical_asset": true
        },
        "false_positive_considerations": "Legitimate RDP access for specific application users or monitoring accounts. Requires precise critical asset definition and user role management.",
        "recommended_action": "Verify user's legitimacy, review permissions, implement strict least privilege for RDP access."
    },
    {
        "name": "Malicious Process Spawning",
        "description": "Detection of unusual child processes being spawned by common applications (e.g., a web server spawning a shell, a document viewer launching an executable), often indicative of an exploit or malware.",
        "severity": "CRITICAL",
        "category": "Malware/Exploitation",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows Event ID 4688 (Process Creation) logs showing suspicious parent-child process relationships (e.g., `w3wp.exe` spawning `cmd.exe`, `outlook.exe` spawning `powershell.exe`).",
        "detection_criteria": {
            "event_id": 4688,
            "parent_process_regex": "(w3wp\\.exe|outlook\\.exe|winword\\.exe|excel\\.exe)",
            "child_process_regex": "(cmd\\.exe|powershell\\.exe|pwsh\\.exe|mshta\\.exe|regsvr32\\.exe|rundll32\\.exe|bitsadmin\\.exe)"
        },
        "false_positive_considerations": "Legitimate applications with advanced features (e.g., launching a command prompt from an IDE). Requires whitelisting and baselining.",
        "recommended_action": "Isolate host, forensic analysis, block malicious process, apply security patches."
    },
    {
        "name": "Inbound Connection from Tor Exit Node",
        "description": "An inbound connection attempt originating from an IP address identified as a Tor exit node. While not inherently malicious, it can indicate attempts to obfuscate origin and is often associated with suspicious activity.",
        "severity": "LOW",
        "category": "Reconnaissance/Obfuscation",
        "protocol": "TCP/UDP",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Inbound connection from an IP address known to be a Tor exit node.",
        "detection_criteria": {
            "source_ip_in_tor_exit_list": true
        },
        "false_positive_considerations": "Legitimate users accessing services via Tor for privacy reasons. Depends on organizational policy regarding Tor traffic.",
        "recommended_action": "Log and monitor, block if high risk, implement stricter authentication for Tor users."
    },
    {
        "name": "Outbound Connection to Tor Exit Node",
        "description": "An internal host initiating an outbound connection to an IP address identified as a Tor exit node, potentially indicating malware C2, data exfiltration, or unauthorized anonymous browsing.",
        "severity": "MEDIUM",
        "category": "Command and Control/Data Exfiltration",
        "protocol": "TCP/UDP",
        "port": "any",
        "direction": "OUTBOUND",
        "condition_summary": "Outbound connection from an internal host to an IP address known to be a Tor exit node.",
        "detection_criteria": {
            "dest_ip_in_tor_exit_list": true
        },
        "false_positive_considerations": "Legitimate users intentionally using Tor for privacy. Depends on organizational policy.",
        "recommended_action": "Investigate internal host, determine intent, block if unauthorized."
    },
    {
        "name": "Heartbeat from Known C2 IP",
        "description": "Detection of regular, low-volume communication (heartbeats) between an internal host and an external IP address known to be a Command and Control (C2) server for malware.",
        "severity": "CRITICAL",
        "category": "Command and Control",
        "protocol": "TCP/UDP/HTTP/HTTPS",
        "port": "any",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "Persistent, periodic low-volume traffic between an internal host and an IP address on a threat intelligence blacklist for C2.",
        "detection_criteria": {
            "dest_ip_in_c2_blacklist": true,
            "packet_rate_per_min": 1,
            "time_window_seconds": 600,
            "payload_entropy_high": true,
            "jitter_analysis_low": true
        },
        "false_positive_considerations": "Very low false positive rate if threat intelligence is accurate and up-to-date.",
        "recommended_action": "Immediately isolate internal host, forensic analysis, update threat intelligence feeds."
    },
    {
        "name": "Remote File Share Creation (Windows)",
        "description": "Detection of remote creation of administrative shares (`C$`, `ADMIN$`) or custom shares on Windows systems, often an indicator of lateral movement by attackers.",
        "severity": "HIGH",
        "category": "Lateral Movement",
        "protocol": "TCP",
        "port": "445",
        "direction": "INBOUND",
        "condition_summary": "Windows Event ID 5140 (Share Accessed) or 5142 (Share Object Added) indicating creation of a new share, especially administrative shares from a non-DC or non-admin workstation.",
        "detection_criteria": {
            "event_id": [5140, 5142],
            "share_name_regex": "(C\\$|D\\$|ADMIN\\$|IPC\\$|TEMP_SHARE_\\d+)",
            "source_ip_not_admin_server": true,
            "user_not_service_account": true
        },
        "false_positive_considerations": "Legitimate automated deployment tools or administrative scripts creating temporary shares. Requires whitelisting.",
        "recommended_action": "Alert system administrators, investigate source host, remove unauthorized shares, review account permissions."
    },
    {
        "name": "Worm/Virus Propagation Attempt (SMB)",
        "description": "Detection of rapid, widespread attempts to connect to SMB shares from an infected host, often trying default credentials or known vulnerabilities to spread a worm.",
        "severity": "CRITICAL",
        "category": "Malware/Lateral Movement",
        "protocol": "TCP",
        "port": "445",
        "direction": "OUTBOUND",
        "condition_summary": "Single internal source attempting a high rate of connections to multiple distinct internal SMB targets, often with failed authentication or attempts to exploit SMB vulnerabilities.",
        "detection_criteria": {
            "failed_smb_connect_rate": 50,
            "unique_dest_ips_per_source": 20,
            "time_window_seconds": 30,
            "smb_exploit_signature_presence": true
        },
        "false_positive_considerations": "Internal network scanners (should be whitelisted).",
        "recommended_action": "Immediately isolate source host, perform network scan for other infected hosts, deploy patches, disable SMBv1."
    },
    {
        "name": "Credential Dumping (Mimikatz Pattern)",
        "description": "Detection of network traffic or process activity patterns associated with credential dumping tools like Mimikatz (e.g., specific Kerberos or NTLM traffic, process injection).",
        "severity": "CRITICAL",
        "category": "Credential Access/Lateral Movement",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows security events showing suspicious access to LSASS process memory (Event ID 4656, 4663), unusual Kerberos ticket requests (Event ID 4769), or process injection related to `lsass.exe`.",
        "detection_criteria": {
            "event_id": [4656, 4663, 4769],
            "process_target": "lsass.exe",
            "access_mask_regex": "(0x1400|0x1000|0x1F0FFF)",
            "network_protocol_flags": ["kerberos_rc4_hash", "ntlm_v1_hash"]
        },
        "false_positive_considerations": "Legitimate debugging tools or security software interacting with LSASS (rare).",
        "recommended_action": "Isolate host, force password resets for all users on compromised host, review security policies, implement Credential Guard."
    },
    {
        "name": "Suspicious Cloud API Calls (High Volume)",
        "description": "An unusual spike in API calls from a specific IAM user or role within a cloud environment, potentially indicating compromised credentials or automated malicious activity.",
        "severity": "HIGH",
        "category": "Cloud Security/Compromise",
        "protocol": "HTTPS",
        "port": "443",
        "direction": "N/A (Cloud Log based)",
        "condition_summary": "High volume of 'write' API calls (e.g., `ec2:RunInstances`, `s3:PutObject`, `iam:CreateUser`) from a single principal, exceeding established baselines, especially if from an unusual geographic location.",
        "detection_criteria": {
            "api_call_rate_per_min_deviation_factor": 5,
            "time_window_seconds": 300,
            "api_call_type": ["write", "delete", "modify"],
            "source_geolocation_unusual": true,
            "user_agent_suspicious": true
        },
        "false_positive_considerations": "Automated deployments, legitimate cloud operations, or burstable workloads. Requires careful baselining of cloud activity.",
        "recommended_action": "Disable/revoke compromised credentials, alert cloud security team, review cloud logs, implement MFA for all cloud users."
    },
    {
        "name": "Cloud Storage Public Access Modification",
        "description": "Detection of changes to cloud storage bucket policies that grant public read/write access, leading to data exposure.",
        "severity": "CRITICAL",
        "category": "Cloud Security/Configuration Misuse",
        "protocol": "HTTPS",
        "port": "443",
        "direction": "N/A (Cloud Log based)",
        "condition_summary": "Cloud logs (e.g., CloudTrail for AWS S3) show a bucket policy being modified to allow public access (e.g., principal `*`, 'Allow' effect, 's3:GetObject').",
        "detection_criteria": {
            "api_call": ["s3:PutBucketPolicy", "s3:PutPublicAccessBlock"],
            "policy_grants_public_access": true
        },
        "false_positive_considerations": "Intentional public bucket for static website hosting (should be whitelisted).",
        "recommended_action": "Immediately revert policy, remove sensitive data, alert security team, review access controls."
    },
    {
        "name": "Suspicious VM Creation/Modification (Cloud)",
        "description": "Rapid creation or modification of virtual machines (VMs) in a cloud environment with unusual configurations (e.g., overly permissive security groups, unusual instance types), potentially for cryptomining, C2, or pivot points.",
        "severity": "HIGH",
        "category": "Cloud Security/Compromise",
        "protocol": "HTTPS",
        "port": "443",
        "direction": "N/A (Cloud Log based)",
        "condition_summary": "Cloud logs showing creation of multiple VMs, VMs with public IPs and open ports (0.0.0.0/0), or from unusual AMIs/images, exceeding a baseline rate.",
        "detection_criteria": {
            "api_call": ["ec2:RunInstances", "compute.instances.insert"],
            "instance_rate_per_hour": 5,
            "security_group_any_port_any_ip": true,
            "unusual_ami_id": true
        },
        "false_positive_considerations": "Automated scaling groups, legitimate burstable workloads, developer sandbox environments. Requires baselining.",
        "recommended_action": "Terminate suspicious VMs, revoke compromised credentials, review cloud security policies."
    },
    {
        "name": "Lateral Movement (Pass-the-Hash)",
        "description": "An attacker uses a password hash (instead of the plaintext password) to authenticate to other systems in the network, commonly seen in Windows environments after credential dumping.",
        "severity": "CRITICAL",
        "category": "Lateral Movement/Credential Access",
        "protocol": "TCP",
        "port": "445, 135, 139",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "Successful network authentications (e.g., NTLMv2) without a prior plaintext password authentication on the initial compromised host, or anomalous Kerberos ticket requests (no TGT, but direct TGS).",
        "detection_criteria": {
            "windows_event_id": [4624, 4648, 4776],
            "logon_type": [3, 9, 10],
            "ntlm_v2_hash_present": true,
            "no_preceding_plaintext_login": true,
            "kerberos_tgs_without_tgt": true
        },
        "false_positive_considerations": "Very low false positive if based on accurate behavioral analysis and log correlation.",
        "recommended_action": "Isolate compromised host, force password resets for all users, implement LAPS, disable NTLM where possible, enable Credential Guard."
    },
    {
        "name": "Cross-Site Request Forgery (CSRF) Attack",
        "description": "Detection of requests to sensitive web application endpoints that lack proper CSRF tokens or have invalid tokens, indicating an attempt to trick a logged-in user's browser into executing unintended actions.",
        "severity": "MEDIUM",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP POST requests to sensitive endpoints (e.g., `change_password`, `transfer_funds`) where the anti-CSRF token is missing, invalid, or replayed.",
        "detection_criteria": {
            "http_method": "POST",
            "uri_path_regex": "\\/(account|settings|transfer|admin)\\/",
            "csrf_token_missing": true,
            "csrf_token_invalid": true,
            "referer_header_mismatch_or_missing": true
        },
        "false_positive_considerations": "Legitimate requests from older clients or certain web crawlers that don't send referer headers. Requires strict token validation.",
        "recommended_action": "Block request, implement robust CSRF protection (e.g., Synchronizer Token Pattern, Double Submit Cookie), review application for CSRF vulnerabilities."
    },
    {
        "name": "Anomalous Geolocation Login (Successful)",
        "description": "A successful login from an IP address associated with a geographic location where the user has never logged in before, especially if it's geographically distant from their last known login location.",
        "severity": "HIGH",
        "category": "Authentication",
        "protocol": "various (HTTP, SSH, RDP, VPN)",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Successful authentication where the source IP's geolocation is significantly different from the user's historical login locations within a short time frame, or from a high-risk country.",
        "detection_criteria": {
            "successful_login": true,
            "geolocation_change_distance_km": 1000,
            "time_since_last_login_minutes": 5,
            "source_ip_geolocation_risk_score": 0.7,
            "user_historical_locations_count": 5
        },
        "false_positive_considerations": "Legitimate user travel, VPN usage, or remote work. Requires user behavioral baselining and multi-factor authentication.",
        "recommended_action": "Alert user, force re-authentication/MFA, review account activity, temporarily block source IP, investigate if suspicious."
    },
    {
        "name": "DGA (Domain Generation Algorithm) Detection",
        "description": "Detection of DNS queries for randomly generated or algorithmically structured domain names, often associated with botnets for Command and Control (C2) communication.",
        "severity": "HIGH",
        "category": "Command and Control",
        "protocol": "UDP/TCP",
        "port": "53",
        "direction": "OUTBOUND",
        "condition_summary": "Outbound DNS queries for non-existent domains with high entropy (randomness), unusual character sequences, or specific DGA family patterns, resulting in NXDOMAIN responses.",
        "detection_criteria": {
            "dns_query_type": "A",
            "nxdomain_response": true,
            "query_entropy_score": 0.85,
            "query_length_min": 10,
            "character_set_diversity": true,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Some legitimate applications or ad networks might generate long, semi-random domains. Requires advanced machine learning or DGA blacklists.",
        "recommended_action": "Block domain, isolate source host, update threat intelligence, forensic analysis."
    },
    {
        "name": "DNS Tunneling (Non-DGA)",
        "description": "Detection of high-volume, legitimate-looking DNS queries that carry non-DNS data, often used to bypass firewalls for C2 or data exfiltration.",
        "severity": "MEDIUM",
        "category": "Command and Control/Data Exfiltration",
        "protocol": "UDP/TCP",
        "port": "53",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "High volume of DNS queries for subdomains of a specific malicious domain, where the subdomains contain encoded data (e.g., base64, hex), or an unusual mix of DNS record types.",
        "detection_criteria": {
            "query_rate_per_min": 100,
            "target_domain_in_watchlist": true,
            "subdomain_contains_encoded_data": true,
            "unusual_record_type_mix": ["TXT", "NULL", "CNAME"],
            "payload_entropy_high": true
        },
        "false_positive_considerations": "Legitimate services using CNAMEs or TXT records extensively. Requires deep DNS payload analysis.",
        "recommended_action": "Block suspicious DNS queries, isolate internal host, analyze traffic, alert security team."
    },
    {
        "name": "Web Scraping/Content Harvesting",
        "description": "An automated client rapidly requesting a large number of pages from a website, potentially to steal content, gather data, or identify vulnerabilities.",
        "severity": "LOW",
        "category": "Reconnaissance/Information Gathering",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "High rate of HTTP GET requests from a single source IP, often with a consistent or missing User-Agent, and requests for sequential or common URL paths (e.g., product pages, articles).",
        "detection_criteria": {
            "request_rate_per_sec": 5,
            "time_window_seconds": 60,
            "user_agent_consistency": true,
            "referer_header_missing_or_consistent": true,
            "unique_url_count_per_session": 50
        },
        "false_positive_considerations": "Legitimate search engine crawlers (should be whitelisted or respect robots.txt), performance monitoring tools.",
        "recommended_action": "Implement CAPTCHA, block source IP, rate-limit, review `robots.txt`."
    },
    {
        "name": "Malicious Macro Document Delivery",
        "description": "Detection of email attachments or downloaded documents (e.g., .doc, .xls, .ppt) containing suspicious VBA macros that attempt to execute PowerShell, download files, or interact with system binaries.",
        "severity": "CRITICAL",
        "category": "Malware",
        "protocol": "SMTP/HTTP/HTTPS",
        "port": "25, 465, 587, 80, 443",
        "direction": "INBOUND",
        "condition_summary": "Email or web downloads of Office documents containing VBA macros with highly suspicious functions or API calls, often obfuscated.",
        "detection_criteria": {
            "file_extension": ["docm", "xlsm", "pptm"],
            "vba_macro_keywords_regex": [
                "Shell",
                "CreateObject",
                "WScript.Shell",
                "DownloadFile",
                "Environ",
                "AutoOpen",
                "Document_Open"
            ],
            "file_header_mismatch_macro": true
        },
        "false_positive_considerations": "Legitimate business macros. Requires sandboxing or strict macro security policies.",
        "recommended_action": "Block delivery, alert user, isolate endpoint, deploy EDR with macro analysis capabilities."
    },
    {
        "name": "Suspicious PowerShell Execution (Obfuscated)",
        "description": "Highly obfuscated PowerShell commands often used by attackers to evade detection, involving encoding, concatenation, or unusual command aliases.",
        "severity": "HIGH",
        "category": "Malware/Post-Exploitation",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows event logs showing PowerShell command lines with base64 encoding (`-EncodedCommand`), extensive string concatenation, or unusual variable usage to hide malicious intent.",
        "detection_criteria": {
            "process_name": "powershell.exe",
            "command_line_regex": [
                "-enc",
                "-e\\s+",
                "\\x2d\\x45\\x6e\\x63",
                "\\$.*\\+\\$.*",
                "IEX\\s+"
            ],
            "event_id": [4688, 4104]
        },
        "false_positive_considerations": "Legitimate PowerShell scripts that use encoding for automation, but the combination with other flags makes it suspicious.",
        "recommended_action": "Isolate host, collect forensics, investigate process tree, implement PowerShell script block logging."
    },
    {
        "name": "SMB Null Session Attempt",
        "description": "An unauthenticated client attempts to establish an SMB null session, which can be used to enumerate user accounts, share names, and gather network information.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": "445",
        "direction": "INBOUND",
        "condition_summary": "SMB session setup requests with empty usernames or passwords (null session), followed by attempts to access IPC$ or other shares without authentication.",
        "detection_criteria": {
            "smb_tree_connect_andx": true,
            "null_username_password": true,
            "target_share": "IPC$"
        },
        "false_positive_considerations": "Some legacy systems or misconfigured clients might attempt null sessions. Generally indicative of reconnaissance.",
        "recommended_action": "Disable null sessions on servers, ensure anonymous access is restricted."
    },
    {
        "name": "Suspicious Scheduled Task Creation",
        "description": "Creation of new scheduled tasks on a system with unusual triggers (e.g., run every minute, at logon by any user) or executing suspicious commands, often used for persistence by attackers.",
        "severity": "HIGH",
        "category": "Persistence",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows Event ID 4698 (A scheduled task was created/updated) showing task creation with suspicious execution paths (e.g., `C:\\Temp\\malware.exe`), very frequent triggers, or running as System/Administrator.",
        "detection_criteria": {
            "event_id": 4698,
            "task_action_regex": "(cmd\\.exe|powershell\\.exe|wscript\\.exe|mshta\\.exe|rundll32\\.exe)",
            "task_trigger_frequent": true,
            "task_run_as_privileged": true,
            "task_source_unusual": true
        },
        "false_positive_considerations": "Legitimate automated deployment or system maintenance tasks. Requires careful whitelisting of known good tasks.",
        "recommended_action": "Remove suspicious task, investigate source of creation, check for other persistence mechanisms."
    },
    {
        "name": "Unauthorized Software Installation",
        "description": "Detection of new software installations that are not whitelisted or approved, potentially indicating malware, unauthorized tools, or backdoors.",
        "severity": "HIGH",
        "category": "Malware/Persistence",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows Event ID 11707 (Installation Operation Completed Successfully) or detection of new executable files in unusual directories (e.g., `C:\\Users\\Public`, `C:\\Temp`) not managed by IT.",
        "detection_criteria": {
            "event_id": [11707, 1033],
            "new_executable_in_unusual_path": true,
            "process_installer_activity": true,
            "not_in_software_whitelist": true
        },
        "false_positive_considerations": "Legitimate new software installations by users or developers. Requires a robust software inventory and whitelisting process.",
        "recommended_action": "Uninstall unauthorized software, investigate source of installation, scan for malware, reinforce endpoint security policies."
    },
    {
        "name": "Excessive API Calls (Web)",
        "description": "Unusually high rate of API calls to a specific web service endpoint from a single source, potentially indicating abuse, data scraping, or a DDoS attempt.",
        "severity": "MEDIUM",
        "category": "Abuse/Denial of Service",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "High request rate to a specific API endpoint, significantly exceeding typical usage patterns, especially if parameters are repetitive or sequential.",
        "detection_criteria": {
            "request_rate_per_sec": 100,
            "time_window_seconds": 10,
            "uri_path_regex": "\\/api\\/v\\d+\\/.*",
            "same_params_multiple_requests": true
        },
        "false_positive_considerations": "Legitimate high-volume API consumers, rapid application refresh, misconfigured clients. Requires baselining for each API endpoint.",
        "recommended_action": "Implement API rate limiting, block source IP, enforce API key usage, employ web application firewall."
    },
    {
        "name": "Suspicious VPN Login",
        "description": "A successful VPN login by a user from an IP address or geolocation not typically associated with their activity, or multiple simultaneous logins for the same user from different locations.",
        "severity": "HIGH",
        "category": "Authentication/Access",
        "protocol": "various (VPN specific)",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Successful VPN login from an IP that deviates from user's historical login patterns, or concurrent logins from widely separated geolocations for a single user.",
        "detection_criteria": {
            "vpn_successful_login": true,
            "source_ip_geolocation_change_threshold_km": 500,
            "concurrent_login_from_different_ips": true,
            "time_window_seconds": 300
        },
        "false_positive_considerations": "Legitimate user travel, use of different VPNs. Requires user behavior analytics and MFA.",
        "recommended_action": "Alert user, force MFA, suspend VPN access temporarily, investigate source of login."
    },
    {
        "name": "Anomalous Data Transfer (Internal to Internal)",
        "description": "An unusually large volume of data being transferred between two internal hosts, especially if they don't typically communicate at that volume or the data type is unexpected, potentially indicating lateral movement or data staging.",
        "severity": "MEDIUM",
        "category": "Lateral Movement/Data Staging",
        "protocol": "TCP/UDP/SMB/NFS",
        "port": "any",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "Sustained high bandwidth utilization or large single file transfers between two internal hosts, exceeding their historical baseline.",
        "detection_criteria": {
            "internal_source": true,
            "internal_dest": true,
            "data_transfer_volume_gb_per_hour": 10,
            "time_window_seconds": 3600,
            "unusual_protocol_for_pair": true
        },
        "false_positive_considerations": "Legitimate internal backups, data synchronization, software deployments, large file sharing. Requires extensive internal network baselining.",
        "recommended_action": "Investigate source and destination hosts, review process activity, check for malware."
    },
    {
        "name": "Unauthorized Service Creation (Windows)",
        "description": "Detection of new Windows services being created by non-administrative users or from suspicious paths, often used for persistence or elevating privileges.",
        "severity": "HIGH",
        "category": "Persistence/Privilege Escalation",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows Event ID 4697 (A service was installed in the system) showing creation of a new service with suspicious names (e.g., random strings), unusual paths (e.g., `C:\\Windows\\Temp\\`), or running with high privileges.",
        "detection_criteria": {
            "event_id": 4697,
            "service_path_regex": "(C:\\\\Windows\\\\Temp\\\\|C:\\\\Users\\\\Public\\\\|C:\\\\ProgramData\\\\)",
            "service_name_randomness_high": true,
            "service_account_privileged": true,
            "source_process_suspicious": true
        },
        "false_positive_considerations": "Legitimate software installations or updates. Requires whitelisting of trusted installers and service names.",
        "recommended_action": "Remove suspicious service, investigate source of creation, scan for malware, reinforce endpoint security."
    },
    {
        "name": "Account Lockout Brute-Force",
        "description": "Repeated failed login attempts against a single user account, leading to account lockout, indicating a targeted brute-force or password spraying attack.",
        "severity": "MEDIUM",
        "category": "Denial of Service/Authentication",
        "protocol": "various",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Numerous failed login attempts from multiple source IPs or from a single IP, targeting a single user account, resulting in account lockout (e.g., Windows Event ID 4740).",
        "detection_criteria": {
            "event_id": [4740, 4625],
            "failed_logins_per_account": 5,
            "time_window_seconds": 60,
            "source_ip_diversity": true,
            "target_account_consistent": true
        },
        "false_positive_considerations": "Legitimate user repeatedly entering wrong password, synchronized password changes not propagated.",
        "recommended_action": "Alert user, investigate source IPs, review account lockout policy, enforce MFA."
    },
    {
        "name": "Web Content Defacement",
        "description": "Detection of unexpected changes to web page content, indicating a successful attack on the web server or application, leading to unauthorized modification.",
        "severity": "CRITICAL",
        "category": "Exploitation/Integrity",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "N/A (File Integrity/HTTP Response)",
        "condition_summary": "Checksum mismatch for static web page files, or detection of known defacement keywords/images in HTTP responses of core web pages.",
        "detection_criteria": {
            "file_checksum_mismatch": true,
            "html_content_change_detection": true,
            "defacement_keywords_regex": "(Hacked by|Owned by|Greetz to)",
            "new_image_urls_suspicious": true
        },
        "false_positive_considerations": "Legitimate website updates or changes. Requires careful baselining of web content.",
        "recommended_action": "Take website offline, restore from backup, investigate compromise, patch web server/application."
    },
    {
        "name": "Suspicious Outbound Email Volume",
        "description": "An internal mailbox or user account sending an unusually high volume of emails, especially to external recipients or containing suspicious attachments, indicative of a compromised account or spam/phishing campaign.",
        "severity": "HIGH",
        "category": "Data Exfiltration/Spam",
        "protocol": "SMTP",
        "port": "25, 465, 587",
        "direction": "OUTBOUND",
        "condition_summary": "Single internal mailbox exceeding typical outbound email volume thresholds, sending to many external recipients, or sending emails with suspicious links/attachments.",
        "detection_criteria": {
            "email_count_per_hour_threshold": 100,
            "unique_recipients_per_hour": 50,
            "contains_suspicious_links": true,
            "contains_executable_attachments": true,
            "sender_ip_not_whitelisted": true
        },
        "false_positive_considerations": "Legitimate marketing campaigns, newsletters, or automated reports. Requires whitelisting trusted senders/campaigns.",
        "recommended_action": "Disable sending from compromised account, reset password, investigate source of compromise, block outbound spam."
    },
    {
        "name": "Unusual Internal Port Usage",
        "description": "Internal hosts communicating on unusual, non-standard, or otherwise restricted ports, potentially indicating unauthorized services, C2, or lateral movement.",
        "severity": "MEDIUM",
        "category": "Command and Control/Lateral Movement",
        "protocol": "TCP/UDP",
        "port": "any",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "Internal source and destination IPs communicating on a port that is not common for their roles or not whitelisted for internal use, especially in a persistent manner.",
        "detection_criteria": {
            "source_internal": true,
            "dest_internal": true,
            "port_not_in_baseline": true,
            "known_unusual_internal_ports": [6667, 6668, 8000, 9000, 10000, 11000],
            "sustained_connection_duration_min": 5
        },
        "false_positive_considerations": "Legitimate custom applications, developer testing, peer-to-peer services. Requires careful baselining of internal network traffic.",
        "recommended_action": "Investigate source and destination hosts, review application inventory, update firewall rules."
    },
    {
        "name": "SQL Injection (Error-Based) via User-Agent",
        "description": "Detection of SQL injection patterns within the User-Agent HTTP header, often used to bypass basic WAFs or in specific attack scenarios.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests with User-Agent header containing SQL error keywords or common SQL injection patterns.",
        "detection_criteria": {
            "header_name": "User-Agent",
            "payload_regex": [
                "(OR|AND)\\s+[0-9]+=[0-9]+",
                "SELECT\\s+.*\\s+FROM",
                "UNION\\s+SELECT"
            ],
            "response_keywords": ["syntax error", "ORA-", "SQLState"]
        },
        "false_positive_considerations": "Extremely low false positive rate; highly suspicious.",
        "recommended_action": "Block source IP, update WAF rules, review application for SQLi vulnerabilities."
    },
    {
        "name": "Web Application Cache Poisoning Attempt",
        "description": "An attacker attempts to manipulate web caches (e.g., reverse proxies, CDNs) by crafting specific HTTP headers or parameters that cause the cache to store and serve malicious content to other users.",
        "severity": "MEDIUM",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests containing unusual or duplicated cache-related headers (e.g., `X-Forwarded-Host`, `Host`, `Origin`) with conflicting values, potentially combined with XSS payloads, targeting cached resources.",
        "detection_criteria": {
            "http_method": ["GET", "POST"],
            "header_contains_suspicious_override": ["X-Forwarded-Host", "Host", "X-Original-Host"],
            "url_parameter_contains_cache_key_manipulation": true,
            "cache_miss_followed_by_success": true
        },
        "false_positive_considerations": "Misconfigured proxies or load balancers. Requires deep understanding of web caching logic.",
        "recommended_action": "Review web cache configurations, ensure proper key normalization, implement strict input validation for cacheable parameters."
    },
    {
        "name": "DNS Zone Transfer (Inbound from External)",
        "description": "An external IP attempting to perform a DNS zone transfer from an internal DNS server that should not be publicly accessible, indicating reconnaissance or an attempt to map internal network structure.",
        "severity": "HIGH",
        "category": "Reconnaissance/Information Gathering",
        "protocol": "TCP",
        "port": "53",
        "direction": "INBOUND",
        "condition_summary": "TCP connection from external IP to internal DNS server on port 53 followed by an AXFR/IXFR query.",
        "detection_criteria": {
            "source_external": true,
            "dest_internal": true,
            "tcp_connection_to_dns_port": true,
            "dns_query_type": ["AXFR", "IXFR"]
        },
        "false_positive_considerations": "None if internal DNS servers are strictly not exposed for zone transfers.",
        "recommended_action": "Block source IP, restrict zone transfers on internal DNS servers to authorized internal IPs only."
    },
    {
        "name": "SSH Root Login Attempt",
        "description": "Direct SSH login attempts as the 'root' user. While sometimes legitimate for specific administrative tasks, it's a high-risk practice and often targeted by attackers.",
        "severity": "MEDIUM",
        "category": "Authentication",
        "protocol": "TCP",
        "port": "22",
        "direction": "INBOUND",
        "condition_summary": "SSH login attempt with username 'root', especially from external sources or after failed attempts.",
        "detection_criteria": {
            "ssh_username": "root",
            "source_external": true,
            "failed_attempts": 3,
            "time_window_seconds": 10
        },
        "false_positive_considerations": "Legitimate root access (e.g., automated scripts). Best practice is to disable direct root login via SSH.",
        "recommended_action": "Disable direct root SSH login, enforce key-based authentication, use sudo for administrative tasks."
    },
    {
        "name": "Suspicious Database Login (Non-Application)",
        "description": "Direct login attempts to a database server (e.g., MySQL, PostgreSQL, MSSQL) from an IP address or user account that is not typically used by the primary application or authorized administrators.",
        "severity": "HIGH",
        "category": "Authentication/Lateral Movement",
        "protocol": "TCP",
        "port": "3306, 5432, 1433",
        "direction": "INBOUND",
        "condition_summary": "Authentication attempt to a database server from an unusual source IP or using a database user account not typically associated with direct access.",
        "detection_criteria": {
            "source_ip_not_whitelisted_for_db_access": true,
            "db_username_not_application": true,
            "failed_attempts": 5,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Legitimate database administrators from new locations, new developer access. Requires strict access control and whitelisting.",
        "recommended_action": "Block source IP, review database access logs, enforce strong database user passwords and least privilege."
    },
    {
        "name": "Malicious USB Device Insertion",
        "description": "Detection of USB device insertion events followed by suspicious file transfers, process execution from the USB, or modification of system files, indicating an attempt to compromise the system via removable media.",
        "severity": "HIGH",
        "category": "Initial Access/Malware",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows Event ID 20001/20003 (USB device attached) followed by rapid file creation, autorun script execution, or `cmd.exe`/PowerShell launching from USB drive paths.",
        "detection_criteria": {
            "event_id": [20001, 20003, 4688],
            "process_from_removable_media": true,
            "file_creation_rate_high": true,
            "autorun_inf_creation": true
        },
        "false_positive_considerations": "Legitimate USB device usage. Requires strict USB device control policies.",
        "recommended_action": "Block USB execution, scan USB device, alert security team, investigate endpoint."
    },
    {
        "name": "Credential Theft (Browser Hooks/Process Injection)",
        "description": "Detection of suspicious processes attempting to inject into web browsers or credential management processes (e.g., LSASS) to steal credentials, often seen with malware.",
        "severity": "CRITICAL",
        "category": "Credential Access",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Windows Event ID 4656/4663 (Object Access) showing unauthorized read/write access to browser processes (`chrome.exe`, `firefox.exe`, `iexplore.exe`) or LSASS from non-system/non-whitelisted processes.",
        "detection_criteria": {
            "event_id": [4656, 4663],
            "target_process_regex": "(chrome\\.exe|firefox\\.exe|iexplore\\.exe|lsass\\.exe)",
            "source_process_suspicious": true,
            "access_mask_regex": "(0x1400|0x1000|0x1F0FFF)"
        },
        "false_positive_considerations": "Legitimate browser extensions or security software. Requires careful whitelisting.",
        "recommended_action": "Isolate host, force password resets, forensic analysis, implement EDR with strong memory protection."
    },
    {
        "name": "Application DoS (Resource Exhaustion)",
        "description": "A rapid increase in requests to a specific application endpoint that, while individually valid, collectively exhaust application resources (e.g., database connections, CPU, memory), leading to application unresponsiveness.",
        "severity": "HIGH",
        "category": "Denial of Service",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "High request rate to specific resource-intensive application endpoints (e.g., search, complex calculations) from multiple sources, leading to high CPU/memory usage on the application server and slow response times.",
        "detection_criteria": {
            "request_rate_per_sec": 50,
            "uri_path_regex": "\\/(search|calculate|report)\\/",
            "server_cpu_usage_threshold": 0.8,
            "server_memory_usage_threshold": 0.9,
            "response_time_increase_factor": 5,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Legitimate peak usage, unoptimized application code. Requires baselining and monitoring application performance metrics.",
        "recommended_action": "Implement rate limiting, deploy application-specific WAF rules, optimize application code, scale resources."
    },
    {
        "name": "DNS Query to Blacklisted Domain",
        "description": "An internal host attempting to resolve a domain name known to be associated with malware, phishing, or Command and Control (C2) infrastructure.",
        "severity": "HIGH",
        "category": "Malware/Command and Control",
        "protocol": "UDP/TCP",
        "port": "53",
        "direction": "OUTBOUND",
        "condition_summary": "Outbound DNS query for a domain name present on a threat intelligence blacklist.",
        "detection_criteria": {
            "query_domain_in_blacklist": true,
            "threat_intel_source": "abuse.ch, MalwareDomains.com"
        },
        "false_positive_considerations": "Outdated blacklist entries. Requires up-to-date threat intelligence.",
        "recommended_action": "Block domain at DNS level, alert security team, investigate internal host for compromise."
    },
    {
        "name": "Exploitation of Public-Facing Service (Known CVE)",
        "description": "Detection of traffic patterns or payloads that directly match known exploits for publicly accessible services, indicating an attacker attempting to leverage a specific Common Vulnerabilities and Exposures (CVE).",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "various",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Inbound traffic containing signatures for known exploits targeting public-facing services (e.g., web servers, VPNs, mail servers) based on CVE database patterns.",
        "detection_criteria": {
            "payload_regex_cve_specific": true,
            "target_service_vulnerable_version": true,
            "source_external": true,
            "time_window_seconds": 1
        },
        "false_positive_considerations": "Low if signatures are precise and up-to-date. Requires constant signature updates.",
        "recommended_action": "Immediately block source, apply patches urgently, forensic analysis."
    },
    {
        "name": "Unauthorized Firewall Rule Modification",
        "description": "Detection of changes to firewall rules that open new ports or allow traffic from new, unauthorized IP ranges, potentially indicating a compromise or malicious insider activity.",
        "severity": "CRITICAL",
        "category": "Configuration Misuse/Persistence",
        "protocol": "N/A (Firewall Log/API based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Firewall logs showing new rules created or existing rules modified to allow inbound/outbound traffic on sensitive ports or from/to `any` IP, by an unauthorized user or process.",
        "detection_criteria": {
            "firewall_log_event_type": "rule_add/modify",
            "port_opened_high_risk": [22, 3389, 445, 80, 443],
            "source_dest_any_ip": true,
            "user_not_whitelisted_for_fw_changes": true
        },
        "false_positive_considerations": "Legitimate network changes by authorized administrators. Requires robust change management and strict role-based access control (RBAC).",
        "recommended_action": "Revert unauthorized changes, alert security team immediately, investigate source of modification, review firewall access policies."
    },
    {
        "name": "Port Scan (FIN Scan)",
        "description": "A stealthy port scan technique where the attacker sends a TCP FIN packet to a target port. An open port should not respond, while a closed port typically sends an RST. This can bypass some firewalls.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": "0-65535",
        "direction": "INBOUND",
        "condition_summary": "Multiple TCP packets with only the FIN flag set (no SYN, ACK, RST) sent to various ports on a target host from a single source, expecting no response for open ports and RST for closed ports.",
        "detection_criteria": {
            "unique_dest_ports_per_source": 15,
            "fin_flag_only": true,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Malicious intent is high for such specific scans. Rarely seen in legitimate traffic.",
        "recommended_action": "Log and alert, consider blocking source IP if unauthorized."
    },
    {
        "name": "Port Scan (Xmas Scan)",
        "description": "A port scan technique where the attacker sends a TCP packet with FIN, URG, and PSH flags set. An open port typically sends no response, while a closed port sends an RST. It's designed to evade simple packet filters.",
        "severity": "LOW",
        "category": "Reconnaissance",
        "protocol": "TCP",
        "port": "0-65535",
        "direction": "INBOUND",
        "condition_summary": "Multiple TCP packets with FIN, URG, PSH flags set (all 'lit up like a Christmas tree') to various ports on a target host from a single source.",
        "detection_criteria": {
            "unique_dest_ports_per_source": 15,
            "fin_urg_psh_flags_set": true,
            "time_window_seconds": 60
        },
        "false_positive_considerations": "Similar to FIN scans, rarely legitimate. Often indicative of malicious reconnaissance.",
        "recommended_action": "Log and alert, consider blocking source IP if unauthorized."
    },
    {
        "name": "HTTP Header Injection (CRLF Injection)",
        "description": "An attacker injects Carriage Return (CR) and Line Feed (LF) characters into HTTP headers or responses, potentially leading to HTTP Response Splitting, cross-site scripting, or cache poisoning.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP request headers or parameters containing encoded or raw CRLF sequences (`%0d%0a`, `\\r\\n`) outside of standard header/body delimiters, leading to new header lines in the response.",
        "detection_criteria": {
            "payload_regex": "(%0d%0a|\\r\\n)(Location|Set-Cookie|Content-Type):",
            "http_method": ["GET", "POST"],
            "param_location": ["query", "header"]
        },
        "false_positive_considerations": "Rare in legitimate traffic. Some older systems might handle multi-line headers poorly, but direct injection is highly suspicious.",
        "recommended_action": "Block request, sanitize input, ensure web server/application properly handles CRLF sequences."
    },
    {
        "name": "LFI/RFI Exploitation Attempt (Log Poisoning)",
        "description": "An attacker attempts to inject malicious code into server log files through LFI/RFI vulnerabilities, then includes these 'poisoned' logs into a web page to achieve remote code execution.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Initial request containing shell commands or XSS payloads in User-Agent/Referer (targeting log files), followed by an LFI/RFI attempt on a log file path (e.g., `/var/log/apache2/access.log`) resulting in code execution.",
        "detection_criteria": {
            "first_request_user_agent_contains_payload": "(<?php system\\(|<script>alert)",
            "second_request_uri_contains_log_path_lfi": "(\\/var\\/log\\/apache2\\/access\\.log|\\/var\\/log\\/nginx\\/access\\.log)",
            "time_between_requests_seconds": 5
        },
        "false_positive_considerations": "Legitimate requests and log access are separate events; correlation reduces false positives. Requires the IDS to track sessions or related events.",
        "recommended_action": "Block source IP, clean compromised log files, patch web application, implement proper input validation."
    },
    {
        "name": "Malicious PDF Document Delivery",
        "description": "Detection of PDF documents containing embedded JavaScript, shellcode, or exploits for PDF reader vulnerabilities, often delivered via email or web downloads.",
        "severity": "HIGH",
        "category": "Malware",
        "protocol": "SMTP/HTTP/HTTPS",
        "port": "25, 465, 587, 80, 443",
        "direction": "INBOUND",
        "condition_summary": "Email or web downloads of PDF files containing suspicious JavaScript objects (e.g., `/JS`, `/OpenAction`), embedded executables, or patterns indicating known PDF exploits.",
        "detection_criteria": {
            "file_extension": "pdf",
            "pdf_internal_script_regex": "(\\/JS|\\/OpenAction|\\/AA|\\/Launch|\\/SubmitForm)",
            "pdf_embedded_exe_signature": true
        },
        "false_positive_considerations": "Legitimate PDFs with interactive forms or JavaScript. Requires careful parsing of PDF structure and content.",
        "recommended_action": "Block delivery, alert user, scan endpoint, deploy endpoint protection with PDF analysis."
    },
    {
        "name": "Suspicious FTP Activity (Anonymous Write)",
        "description": "Attempts to upload files to an FTP server's anonymous login directory, potentially indicating a staging area for malware or phishing content, or an attempt to exploit misconfigured FTP.",
        "severity": "MEDIUM",
        "category": "Initial Access/Staging",
        "protocol": "FTP",
        "port": "21",
        "direction": "INBOUND",
        "condition_summary": "FTP login using 'anonymous' credentials followed by a PUT (STOR) command to a public or sensitive directory.",
        "detection_criteria": {
            "ftp_login_username": "anonymous",
            "ftp_command": "STOR",
            "target_directory_regex": "(\\/pub\\/|\\/incoming\\/|\\/temp\\/)",
            "source_external": true
        },
        "false_positive_considerations": "Legitimate anonymous upload services (if configured for that purpose).",
        "recommended_action": "Disable anonymous write access, review FTP configurations, alert security team."
    },
    {
        "name": "SSDP Reflection Attack",
        "description": "An attacker sends a small UDP probe to misconfigured SSDP (Simple Service Discovery Protocol) devices (port 1900) on the internet, which then respond with large packets to a spoofed victim IP, causing a DDoS.",
        "severity": "HIGH",
        "category": "Denial of Service",
        "protocol": "UDP",
        "port": "1900",
        "direction": "OUTBOUND/INBOUND",
        "condition_summary": "High volume of outbound UDP probes to external port 1900, followed by a significantly larger volume of inbound UDP responses, with small request and large response sizes.",
        "detection_criteria": {
            "udp_request_packet_size_kb": 0.5,
            "udp_response_packet_size_kb": 1.5,
            "inbound_outbound_ratio": 5,
            "dest_port": 1900,
            "time_window_seconds": 5
        },
        "false_positive_considerations": "Legitimate SSDP discovery in internal networks (rarely external).",
        "recommended_action": "Block outbound UDP 1900 to external, disable UPnP on external devices, implement BCP38."
    },
    {
        "name": "Network Reconnaissance (Tracert/Traceroute)",
        "description": "An attacker using `tracert` or `traceroute` to map network topology and identify routers and firewalls between their host and a target.",
        "severity": "INFORMATIONAL",
        "category": "Reconnaissance",
        "protocol": "ICMP/UDP",
        "port": "N/A (ICMP) / 33434-33534 (UDP)",
        "direction": "INBOUND",
        "condition_summary": "Sequential ICMP Time-Exceeded (Type 11, Code 0) messages from multiple hops (intermediate routers) in response to outbound probes, indicating a traceroute.",
        "detection_criteria": {
            "icmp_type": 11,
            "icmp_code": 0,
            "sequence_of_source_ips_consistent": true,
            "dest_port_range": [33434, 33534],
            "ttl_increase_over_time": true
        },
        "false_positive_considerations": "Legitimate network troubleshooting or monitoring. Whitelist known network engineers/monitoring tools.",
        "recommended_action": "Log activity, monitor for escalation to more serious threats."
    },
    {
        "name": "Anomalous Login Time/Day",
        "description": "A successful login by a user account outside of their typical working hours or on unusual days (e.g., weekend login for a weekday-only user), potentially indicating compromise or insider threat.",
        "severity": "MEDIUM",
        "category": "Authentication/Insider Threat",
        "protocol": "various",
        "port": "any",
        "direction": "INBOUND",
        "condition_summary": "Successful user login during hours or days that deviate significantly from their established historical login patterns (e.g., 3 AM login on a Sunday for an office worker).",
        "detection_criteria": {
            "successful_login": true,
            "user_historical_login_profile_deviation": true,
            "current_time_outside_normal_hours": true,
            "current_day_outside_normal_days": true
        },
        "false_positive_considerations": "Legitimate remote work, travel, or unusual work schedules. Requires flexible baselining and user awareness.",
        "recommended_action": "Alert user and manager, force MFA, review account activity, initiate investigation if suspicious."
    },
    {
        "name": "Web Parameter Tampering",
        "description": "An attacker modifies parameters in HTTP requests (e.g., price, quantity, user ID) to bypass authorization, gain privileges, or manipulate application logic.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests where sensitive parameters (e.g., `price=`, `userId=`, `isAdmin=`) are manually modified from expected values, or sequential IDs are enumerated.",
        "detection_criteria": {
            "http_method": ["GET", "POST", "PUT"],
            "param_contains_sensitive_keywords": ["price", "total", "admin", "user_id", "account_id"],
            "value_deviation_from_expected": true,
            "sequential_id_enumeration": true,
            "http_referer_mismatch": true
        },
        "false_positive_considerations": "Legitimate application functionality that allows parameter modification (rare for sensitive ones). Requires knowing expected parameter values and ranges.",
        "recommended_action": "Block request, implement server-side validation for all parameters, enforce least privilege at the application layer."
    },
    {
        "name": "Suspicious Executable Metadata",
        "description": "Detection of executable files with unusual or missing metadata (e.g., invalid digital signatures, mismatched company names, no version info), indicative of malware or tampered binaries.",
        "severity": "HIGH",
        "category": "Malware",
        "protocol": "N/A (Endpoint/File analysis)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "New executable files lacking valid digital signatures, having mismatched or generic company/product names, or zero-fill in typical metadata fields, found in suspicious locations.",
        "detection_criteria": {
            "file_extension": ["exe", "dll", "sys"],
            "digital_signature_invalid_or_missing": true,
            "company_name_generic_or_missing": true,
            "product_name_generic_or_missing": true,
            "file_path_suspicious_regex": "(C:\\\\Temp|C:\\\\Users\\\\Public)"
        },
        "false_positive_considerations": "Legitimate unsigned internal tools, custom scripts. Requires a whitelist of known good unsigned binaries.",
        "recommended_action": "Quarantine file, alert endpoint security, investigate source of file, scan for malware."
    },
    {
        "name": "SQL Injection (Out-of-Band)",
        "description": "An attacker uses SQL injection to trigger a request to an external server (e.g., DNS lookup, HTTP request) to exfiltrate data or verify injection success when direct responses are not available.",
        "severity": "CRITICAL",
        "category": "Exploitation/Data Exfiltration",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests containing SQL functions that attempt to trigger external network requests (e.g., `LOAD_FILE`, `UTL_HTTP.REQUEST`, `xp_cmdshell` with `nslookup`/`ping`) targeting an attacker-controlled domain.",
        "detection_criteria": {
            "payload_regex": [
                "LOAD_FILE\\(.*?\\)",
                "UTL_HTTP\\.REQUEST\\(.*?\\)",
                "xp_cmdshell\\s+'(nslookup|ping)\\s+[a-zA-Z0-9-]+\\.attacker\\.com'"
            ],
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body"],
            "outbound_dns_or_http_to_attacker_domain": true
        },
        "false_positive_considerations": "Extremely low false positive rate. These are very specific attack patterns.",
        "recommended_action": "Block source IP, review application logs, patch vulnerable application, monitor network for outbound connections to suspicious domains."
    },
    {
        "name": "Malicious Browser Extension Installation",
        "description": "Detection of unauthorized or malicious browser extension installations that can monitor user activity, inject ads, or steal data.",
        "severity": "HIGH",
        "category": "Malware/Persistence",
        "protocol": "N/A (Endpoint/Log based)",
        "port": "N/A",
        "direction": "N/A",
        "condition_summary": "Creation of new browser extension folders/files in user profiles, especially if unsigned or from untrusted sources, or if associated with suspicious network connections.",
        "detection_criteria": {
            "file_creation_path_regex": "(Chrome\\\\User Data\\\\Default\\\\Extensions|Firefox\\\\Profiles\\\\.*\\\\extensions)",
            "unsigned_extension_detected": true,
            "network_connection_to_adware_c2": true,
            "browser_process_suspicious_activity": true
        },
        "false_positive_considerations": "Legitimate manual extension installations by users. Requires strict browser policies and whitelisting of approved extensions.",
        "recommended_action": "Remove extension, alert user, investigate source of installation, enforce browser security policies."
    },
    {
        "name": "HTTP Response Smuggling",
        "description": "An attacker sends an HTTP request that is interpreted differently by a front-end proxy/WAF and a back-end server, allowing the attacker to smuggle malicious requests past security devices.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests containing conflicting `Content-Length` and `Transfer-Encoding` headers, or ambiguous line endings, designed to confuse proxy/server parsers and allow smuggling of a second, hidden request.",
        "detection_criteria": {
            "http_method": ["POST", "PUT"],
            "header_contains": ["Content-Length", "Transfer-Encoding"],
            "header_values_conflict": true,
            "double_crlf_before_body": true,
            "hidden_second_request_signature": true
        },
        "false_positive_considerations": "Rare in legitimate traffic. Can be triggered by misconfigured proxies/servers but highly suspicious.",
        "recommended_action": "Block request, ensure proxies and web servers are hardened against HTTP smuggling, use HTTP/2 where possible."
    },
    {
        "name": "Web Cache Deception",
        "description": "An attacker crafts a URL that exploits web server or CDN misconfigurations to cache sensitive user-specific content (e.g., login page with user's email) in a public cache, allowing it to be retrieved by other attackers.",
        "severity": "MEDIUM",
        "category": "Information Disclosure/Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests for static file extensions (e.g., `.jpg`, `.css`) but to dynamic content paths (`/user_profile.php/image.jpg`), leading to a cached response containing sensitive information.",
        "detection_criteria": {
            "http_method": "GET",
            "uri_path_extension_mismatch": true,
            "uri_path_contains_sensitive_keyword": ["profile", "account", "dashboard"],
            "response_contains_sensitive_data_pattern": true,
            "cache_hit_after_malicious_request": true
        },
        "false_positive_considerations": "Some legitimate URL rewriting or path handling that is not malicious. Requires deep understanding of application caching.",
        "recommended_action": "Review web server/CDN caching configurations, ensure sensitive content is not cached based on static file extensions."
    },
    {
        "name": "NTLM Relay Attack",
        "description": "Detection of NTLM authentication requests being relayed to another target, potentially allowing an attacker to authenticate to other services without knowing the plaintext password.",
        "severity": "CRITICAL",
        "category": "Lateral Movement/Authentication",
        "protocol": "TCP",
        "port": "445, 80, 443",
        "direction": "BIDIRECTIONAL",
        "condition_summary": "An NTLM authentication sequence (Negotiate, Challenge, Authenticate) observed where the challenge/response is forwarded from one client-server pair to another, without the authenticating client being the origin.",
        "detection_criteria": {
            "ntlm_negotiate_present": true,
            "ntlm_challenge_response_observed": true,
            "same_ntlm_hash_across_multiple_sessions": true,
            "source_ip_intermediate_or_suspicious": true
        },
        "false_positive_considerations": "Legitimate NTLM authentication, but relay is highly suspicious. Requires robust network forensics.",
        "recommended_action": "Block source, disable NTLM where possible, enable SMB signing, implement EDR, deploy Credential Guard."
    },
    {
        "name": "Insecure Direct Object Reference (IDOR) Attempt",
        "description": "An attacker modifies a parameter value that directly refers to a system object (e.g., file name, user ID, record key) to access or modify unauthorized resources.",
        "severity": "MEDIUM",
        "category": "Authorization Bypass",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests where numeric or sequential IDs in URL paths or parameters are modified (e.g., `/users/123` to `/users/124`), attempting to access unauthorized records, or privileged actions are performed with non-privileged user IDs.",
        "detection_criteria": {
            "http_method": ["GET", "POST", "PUT", "DELETE"],
            "uri_param_numeric_sequential_change": true,
            "body_param_numeric_sequential_change": true,
            "user_role_mismatch_for_action": true,
            "response_status_code_success_after_manipulation": [200, 204]
        },
        "false_positive_considerations": "Legitimate enumeration (e.g., paginated content) if not tied to sensitive resources. Requires understanding of application's object handling.",
        "recommended_action": "Block request, implement robust authorization checks on the server-side for every request."
    },
    {
        "name": "Server-Side Template Injection (SSTI) Attempt",
        "description": "An attacker injects malicious template syntax into user-supplied input, which is then processed by a server-side template engine, potentially leading to remote code execution.",
        "severity": "CRITICAL",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP requests containing template engine syntax (e.g., `{{7*7}}`, `${{7*7}}`, `<% System.out.println(7*7) %>`) in user-controlled parameters, often used for reconnaissance or RCE.",
        "detection_criteria": {
            "payload_regex": [
                "\\{\\{.*?\\}\\}",
                "\\$\\{\\{.*?\\}\\}",
                "<%.*?%>",
                "\\${self.__class__}"
            ],
            "http_method": ["GET", "POST"],
            "param_location": ["query", "body"]
        },
        "false_positive_considerations": "Rare in legitimate input. Could be triggered by applications that allow template-like syntax for advanced content, but usually with strict sanitization.",
        "recommended_action": "Block request, sanitize user input, update template engine, use sandboxed template environments."
    },
    {
        "name": "SQL Injection (Second-Order)",
        "description": "An attacker injects malicious SQL into input that is stored by the application, and then later retrieved and executed in a vulnerable context without re-validation, leading to delayed exploitation.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "Initial request stores malicious SQL (e.g., ' UNION SELECT') in a database, followed by a subsequent, legitimate request that triggers the execution of this stored malicious SQL, potentially causing errors or data exfiltration.",
        "detection_criteria": {
            "first_request_stores_payload": true,
            "stored_payload_contains_sql_injection": true,
            "second_request_triggers_execution": true,
            "time_between_requests_long": true
        },
        "false_positive_considerations": "Requires advanced stateful analysis and correlation across multiple sessions and potentially different application layers. More prone to false negatives due to time aspect.",
        "recommended_action": "Review application logic for proper input validation at both storage and retrieval points, conduct thorough code review and penetration testing."
    },
    {
        "name": "Mass Assignment Vulnerability Attempt",
        "description": "An attacker attempts to set properties on an object that they are not authorized to modify (e.g., `is_admin=true`), often by including unexpected parameters in API calls.",
        "severity": "MEDIUM",
        "category": "Authorization Bypass",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND",
        "condition_summary": "HTTP POST/PUT requests to update endpoints (`/users/update`, `/api/profile`) containing parameters that correspond to sensitive or administrative fields (e.g., `role`, `isAdmin`, `is_active_account`) for which the requesting user should not have direct write access.",
        "detection_criteria": {
            "http_method": ["POST", "PUT"],
            "uri_path_regex": "\\/(update|save|profile)\\/",
            "payload_contains_sensitive_attribute": ["role", "isAdmin", "active", "status", "privileged"],
            "user_role_not_authorized_for_attribute_change": true
        },
        "false_positive_considerations": "Legitimate administrative updates. Requires a strong understanding of the application's data models and user roles.",
        "recommended_action": "Block request, implement explicit whitelisting/blacklisting of properties for mass assignment, use DTOs (Data Transfer Objects)."
    },
    {
        "name": "SSRF (Server-Side Request Forgery) via DNS Rebinding",
        "description": "An attacker uses DNS rebinding to trick the server into making requests to an internal IP address after an initial external DNS resolution, bypassing network segmentation.",
        "severity": "HIGH",
        "category": "Exploitation",
        "protocol": "HTTP/HTTPS",
        "port": "80, 443",
        "direction": "INBOUND/OUTBOUND",
        "condition_summary": "Initial HTTP request to an external attacker-controlled domain, followed by the server attempting to resolve that same domain again, but now to an internal private IP address, and subsequent successful access to internal resources.",
        "detection_criteria": {
            "first_dns_resolution_external": true,
            "second_dns_resolution_internal": true,
            "time_between_resolutions_short": true,
            "subsequent_http_request_to_internal_ip": true
        },
        "false_positive_considerations": "Complex to detect, often missed by traditional IDS. Requires correlation of DNS and HTTP traffic over time.",
        "recommended_action": "Block suspicious DNS requests, implement whitelisting for server-side requests, disable DNS rebind protection on internal DNS."
    },
    {
        "name": "Cryptomining Activity (Outbound to Pool)",
        "description": "An internal host establishing persistent outbound connections to known cryptocurrency mining pools, indicating unauthorized cryptomining activity (often by malware).",
        "severity": "MEDIUM",
        "category": "Malware/Resource Abuse",
        "protocol": "TCP",
        "port": "3333, 4444, 5555, 7777, 8888, 14444",
        "direction": "OUTBOUND",
        "condition_summary": "Persistent outbound TCP connections from an internal host to IPs or domains associated with known cryptocurrency mining pools, often with high CPU usage on the source host.",
        "detection_criteria": {
            "dest_ip_in_cryptomining_blacklist": true,
            "dest_port_in_mining_ports": true,
            "sustained_connection_duration_min": 60,
            "source_cpu_usage_high": true
        },
        "false_positive_considerations": "Legitimate cryptomining operations (if allowed). Requires up-to-date mining pool blacklists.",
        "recommended_action": "Isolate host, investigate process, remove mining software/malware, monitor resource usage."
    }
]
